<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.0 on win32)" generated="20200109 17:02:22.638" rpa="false">
<suite id="s1" name="BulkPatching Robot" source="C:\Users\quocanh.ho\git\BulkPatching_Robot">
<suite id="s1-s1" name="BulkPatching Robot" source="C:\Users\quocanh.ho\git\BulkPatching_Robot\BulkPatching_Robot">
<suite id="s1-s1-s1" name="Test Resources" source="C:\Users\quocanh.ho\git\BulkPatching_Robot\BulkPatching_Robot\Test_Resources">
<suite id="s1-s1-s1-s1" name="Test Suites" source="C:\Users\quocanh.ho\git\BulkPatching_Robot\BulkPatching_Robot\Test_Resources\Test_Suites">
<suite id="s1-s1-s1-s1-s1" name="4.Exit Bulk Patchings Screen" source="C:\Users\quocanh.ho\git\BulkPatching_Robot\BulkPatching_Robot\Test_Resources\Test_Suites\4.Exit_Bulk_Patchings_Screen">
<suite id="s1-s1-s1-s1-s1-s1" name="4.4.2.CheckAllPatchesOnBulkPatchingListArePatchedSuccessfullyAfterWaitingForTimeout" source="C:\Users\quocanh.ho\git\BulkPatching_Robot\BulkPatching_Robot\Test_Resources\Test_Suites\4.Exit_Bulk_Patchings_Screen\4.4.2.CheckAllPatchesOnBulkPatchingListArePatchedSuccessfullyAfterWaitingForTimeout.robot">
<test id="s1-s1-s1-s1-s1-s1-t1" name="Exit_Bulk_04_02_09_Verify that all patches on Bulk patching list are patched successfully after Time out if patching on a 96LC panel">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open SSH Connection and Login</arg>
<arg>Open WebUI And Go To Home Screen</arg>
</arguments>
<kw name="Open SSH Connection and Login" library="SSHDefinitions">
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${HOST_A}</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:23.233" endtime="20200109 17:02:23.233"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20200109 17:02:23.233" level="INFO">Logging into '192.168.171.201:22' as 'root'.</msg>
<msg timestamp="20200109 17:02:25.093" level="INFO">Read output: #</msg>
<status status="PASS" starttime="20200109 17:02:23.233" endtime="20200109 17:02:25.093"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:23.233" endtime="20200109 17:02:25.093"></status>
</kw>
<kw name="Open WebUI And Go To Home Screen" library="GeneralPage">
<tags>
<tag>host_A</tag>
<tag>host_B</tag>
</tags>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>http://</arg>
<arg>${HOST A}</arg>
<arg>:8888</arg>
</arguments>
<assign>
<var>${WebUI url}</var>
</assign>
<msg timestamp="20200109 17:02:25.093" level="INFO">${WebUI url} = http://192.168.171.201:8888</msg>
<status status="PASS" starttime="20200109 17:02:25.093" endtime="20200109 17:02:25.093"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${WebUI url}</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20200109 17:02:25.093" level="INFO">Opening browser 'Chrome' to base url 'http://192.168.171.201:8888'.</msg>
<status status="PASS" starttime="20200109 17:02:25.093" endtime="20200109 17:02:28.180"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200109 17:02:28.181" endtime="20200109 17:02:29.319"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200109 17:02:30.325" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200109 17:02:29.319" endtime="20200109 17:02:30.325"></status>
</kw>
<kw name="Set Web UI to Stand By State" library="GeneralPage">
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${btnExit}</arg>
</arguments>
<assign>
<var>${count Exit button}</var>
</assign>
<msg timestamp="20200109 17:02:30.356" level="INFO">${count Exit button} = 0</msg>
<status status="PASS" starttime="20200109 17:02:30.325" endtime="20200109 17:02:30.356"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count Exit button} &gt; 0</arg>
<arg>Exit Screen</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:30.356" endtime="20200109 17:02:30.356"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${btnCancel}</arg>
</arguments>
<assign>
<var>${count Cancel button}</var>
</assign>
<msg timestamp="20200109 17:02:30.388" level="INFO">${count Cancel button} = 0</msg>
<status status="PASS" starttime="20200109 17:02:30.356" endtime="20200109 17:02:30.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count Cancel button} &gt; 0</arg>
<arg>Exit Screen</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:30.388" endtime="20200109 17:02:30.388"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${lblimVisionX}</arg>
</arguments>
<assign>
<var>${count Home screen}</var>
</assign>
<msg timestamp="20200109 17:02:30.403" level="INFO">${count Home screen} = 0</msg>
<status status="PASS" starttime="20200109 17:02:30.388" endtime="20200109 17:02:30.403"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count Home screen} &gt; 0</arg>
<arg>Run Keywords</arg>
<arg>Click Web Button</arg>
<arg>${btnHome}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:30.403" endtime="20200109 17:02:30.403"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:30.325" endtime="20200109 17:02:30.403"></status>
</kw>
<kw name="Go To Home Screen" library="GeneralPage">
<kw name="Click Web Button" library="GeneralPage">
<arguments>
<arg>${btnHome}</arg>
</arguments>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<assign>
<var>${button exist}</var>
</assign>
<msg timestamp="20200109 17:02:30.434" level="INFO">${button exist} = 1</msg>
<status status="PASS" starttime="20200109 17:02:30.403" endtime="20200109 17:02:30.434"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${button exist} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<msg timestamp="20200109 17:02:30.450" level="INFO">Clicking element '//div[@id='home-lang']'.</msg>
<status status="PASS" starttime="20200109 17:02:30.434" endtime="20200109 17:02:30.598"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200109 17:02:31.612" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200109 17:02:30.603" endtime="20200109 17:02:31.613"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:30.600" endtime="20200109 17:02:31.614"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:30.434" endtime="20200109 17:02:31.615"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:30.434" endtime="20200109 17:02:31.615"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:30.434" endtime="20200109 17:02:31.616"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:30.403" endtime="20200109 17:02:31.617"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:30.403" endtime="20200109 17:02:31.617"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:25.093" endtime="20200109 17:02:31.618"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:23.233" endtime="20200109 17:02:31.618"></status>
</kw>
<kw name="Given Go To Bulk Patching Screen" library="HomePage">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnBulk Patching}</arg>
</arguments>
<msg timestamp="20200109 17:02:31.622" level="INFO">Clicking element '//input[@id='bulk-patch-btn']'.</msg>
<status status="PASS" starttime="20200109 17:02:31.621" endtime="20200109 17:02:31.761"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200109 17:02:32.777" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200109 17:02:31.762" endtime="20200109 17:02:32.777"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:31.762" endtime="20200109 17:02:32.777"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:31.620" endtime="20200109 17:02:32.777"></status>
</kw>
<kw name="When Plugin Serial 24F Tip to Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; Module &quot;A&quot; from Port &quot;1&quot; to Port &quot;3&quot;" library="VirtualPanelDefinitions">
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${port1ID}</arg>
</arguments>
<assign>
<var>${from port}</var>
</assign>
<msg timestamp="20200109 17:02:32.777" level="INFO">${from port} = 1</msg>
<status status="PASS" starttime="20200109 17:02:32.777" endtime="20200109 17:02:32.777"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${port2ID}</arg>
</arguments>
<assign>
<var>${to port}</var>
</assign>
<msg timestamp="20200109 17:02:32.777" level="INFO">${to port} = 3</msg>
<status status="PASS" starttime="20200109 17:02:32.777" endtime="20200109 17:02:32.777"></status>
</kw>
<kw name="${i} IN RANGE [ ${from port} | ${to port+1} ]" type="for">
<kw name="${i} = 1" type="foritem">
<kw name="Plugin 24F Tip to Rack &quot;${rackID}&quot; Panel &quot;${panelID}&quot; Row &quot;${row}&quot; Module &quot;${module}&quot; Port &quot;${i}&quot;" library="VirtualPanelDefinitions">
<kw name="Get 24F Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
<arg>${module}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200109 17:02:32.777" level="INFO">Length is 12</msg>
<msg timestamp="20200109 17:02:32.777" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200109 17:02:32.777" endtime="20200109 17:02:32.777"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${input module}' == 'A' or '${input module}' == 'a' or '${input module}' == 'B' or '${input module}' == 'b'</arg>
<arg>Set Variable</arg>
<arg>AB</arg>
<arg>ELSE IF</arg>
<arg>'${input module}' == 'C' or '${input module}' == 'c' or '${input module}' == 'D' or '${input module}' == 'd'</arg>
<arg>Set Variable</arg>
<arg>CD</arg>
</arguments>
<assign>
<var>${temp module}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AB</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:32.792" endtime="20200109 17:02:32.792"></status>
</kw>
<msg timestamp="20200109 17:02:32.792" level="INFO">${temp module} = AB</msg>
<status status="PASS" starttime="20200109 17:02:32.792" endtime="20200109 17:02:32.792"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:32.792" endtime="20200109 17:02:32.792"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.792" endtime="20200109 17:02:32.792"></status>
</kw>
<kw name="${panel index} = 1" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:32.792" endtime="20200109 17:02:32.808"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.792" endtime="20200109 17:02:32.808"></status>
</kw>
<kw name="${panel index} = 2" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:32.808" endtime="20200109 17:02:32.808"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.808" endtime="20200109 17:02:32.808"></status>
</kw>
<kw name="${panel index} = 3" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:32.808" endtime="20200109 17:02:32.808"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.808" endtime="20200109 17:02:32.808"></status>
</kw>
<kw name="${panel index} = 4" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:32.808" endtime="20200109 17:02:32.808"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.808" endtime="20200109 17:02:32.808"></status>
</kw>
<kw name="${panel index} = 5" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:32.808" endtime="20200109 17:02:32.808"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.808" endtime="20200109 17:02:32.808"></status>
</kw>
<kw name="${panel index} = 6" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:32.808" endtime="20200109 17:02:32.824"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.808" endtime="20200109 17:02:32.824"></status>
</kw>
<kw name="${panel index} = 7" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:32.824" endtime="20200109 17:02:32.824"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.824" endtime="20200109 17:02:32.824"></status>
</kw>
<kw name="${panel index} = 8" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:32.824" endtime="20200109 17:02:32.824"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.824" endtime="20200109 17:02:32.824"></status>
</kw>
<kw name="${panel index} = 9" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200109 17:02:32.824" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200109 17:02:32.824" endtime="20200109 17:02:32.824"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.824" endtime="20200109 17:02:32.824"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.824" endtime="20200109 17:02:32.824"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.792" endtime="20200109 17:02:32.824"></status>
</kw>
<msg timestamp="20200109 17:02:32.824" level="INFO">${panel index} = 10</msg>
<status status="PASS" starttime="20200109 17:02:32.777" endtime="20200109 17:02:32.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200109 17:02:32.824" level="INFO">10</msg>
<status status="PASS" starttime="20200109 17:02:32.824" endtime="20200109 17:02:32.824"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --plugin --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--module</arg>
<arg>${module}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200109 17:02:32.824" level="INFO">${completed command} = vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 1</msg>
<status status="PASS" starttime="20200109 17:02:32.824" endtime="20200109 17:02:32.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200109 17:02:32.824" level="INFO">vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 1</msg>
<status status="PASS" starttime="20200109 17:02:32.824" endtime="20200109 17:02:32.824"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200109 17:02:32.902" level="INFO">vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 1</msg>
<status status="PASS" starttime="20200109 17:02:32.839" endtime="20200109 17:02:32.902"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200109 17:02:34.919" level="INFO">${stdout} = result=success
command=plugin
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:02:32.902" endtime="20200109 17:02:34.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200109 17:02:34.919" level="INFO">result=success
command=plugin
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:02:34.919" endtime="20200109 17:02:34.919"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.824" endtime="20200109 17:02:34.919"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.777" endtime="20200109 17:02:34.919"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.777" endtime="20200109 17:02:34.919"></status>
</kw>
<kw name="${i} = 2" type="foritem">
<kw name="Plugin 24F Tip to Rack &quot;${rackID}&quot; Panel &quot;${panelID}&quot; Row &quot;${row}&quot; Module &quot;${module}&quot; Port &quot;${i}&quot;" library="VirtualPanelDefinitions">
<kw name="Get 24F Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
<arg>${module}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200109 17:02:34.919" level="INFO">Length is 12</msg>
<msg timestamp="20200109 17:02:34.919" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200109 17:02:34.919" endtime="20200109 17:02:34.919"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${input module}' == 'A' or '${input module}' == 'a' or '${input module}' == 'B' or '${input module}' == 'b'</arg>
<arg>Set Variable</arg>
<arg>AB</arg>
<arg>ELSE IF</arg>
<arg>'${input module}' == 'C' or '${input module}' == 'c' or '${input module}' == 'D' or '${input module}' == 'd'</arg>
<arg>Set Variable</arg>
<arg>CD</arg>
</arguments>
<assign>
<var>${temp module}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AB</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:34.919" endtime="20200109 17:02:34.919"></status>
</kw>
<msg timestamp="20200109 17:02:34.919" level="INFO">${temp module} = AB</msg>
<status status="PASS" starttime="20200109 17:02:34.919" endtime="20200109 17:02:34.934"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:34.934" endtime="20200109 17:02:34.934"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:34.934" endtime="20200109 17:02:34.934"></status>
</kw>
<kw name="${panel index} = 1" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:34.934" endtime="20200109 17:02:34.934"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:34.934" endtime="20200109 17:02:34.934"></status>
</kw>
<kw name="${panel index} = 2" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:34.934" endtime="20200109 17:02:34.950"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:34.934" endtime="20200109 17:02:34.950"></status>
</kw>
<kw name="${panel index} = 3" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:34.950" endtime="20200109 17:02:34.950"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:34.950" endtime="20200109 17:02:34.950"></status>
</kw>
<kw name="${panel index} = 4" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:34.950" endtime="20200109 17:02:34.950"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:34.950" endtime="20200109 17:02:34.950"></status>
</kw>
<kw name="${panel index} = 5" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:34.950" endtime="20200109 17:02:34.966"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:34.950" endtime="20200109 17:02:34.966"></status>
</kw>
<kw name="${panel index} = 6" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:34.966" endtime="20200109 17:02:34.966"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:34.966" endtime="20200109 17:02:34.966"></status>
</kw>
<kw name="${panel index} = 7" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:34.966" endtime="20200109 17:02:34.966"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:34.966" endtime="20200109 17:02:34.966"></status>
</kw>
<kw name="${panel index} = 8" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:34.966" endtime="20200109 17:02:34.966"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:34.966" endtime="20200109 17:02:34.966"></status>
</kw>
<kw name="${panel index} = 9" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200109 17:02:34.966" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200109 17:02:34.966" endtime="20200109 17:02:34.966"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:34.966" endtime="20200109 17:02:34.966"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:34.966" endtime="20200109 17:02:34.966"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:34.934" endtime="20200109 17:02:34.966"></status>
</kw>
<msg timestamp="20200109 17:02:34.966" level="INFO">${panel index} = 10</msg>
<status status="PASS" starttime="20200109 17:02:34.919" endtime="20200109 17:02:34.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200109 17:02:34.981" level="INFO">10</msg>
<status status="PASS" starttime="20200109 17:02:34.981" endtime="20200109 17:02:34.981"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --plugin --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--module</arg>
<arg>${module}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200109 17:02:34.981" level="INFO">${completed command} = vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 2</msg>
<status status="PASS" starttime="20200109 17:02:34.981" endtime="20200109 17:02:34.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200109 17:02:34.981" level="INFO">vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 2</msg>
<status status="PASS" starttime="20200109 17:02:34.981" endtime="20200109 17:02:34.981"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200109 17:02:35.044" level="INFO">vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 2</msg>
<status status="PASS" starttime="20200109 17:02:34.981" endtime="20200109 17:02:35.044"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200109 17:02:37.072" level="INFO">${stdout} = result=success
command=plugin
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:02:35.044" endtime="20200109 17:02:37.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200109 17:02:37.072" level="INFO">result=success
command=plugin
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:02:37.072" endtime="20200109 17:02:37.072"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:34.981" endtime="20200109 17:02:37.072"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:34.919" endtime="20200109 17:02:37.072"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:34.919" endtime="20200109 17:02:37.072"></status>
</kw>
<kw name="${i} = 3" type="foritem">
<kw name="Plugin 24F Tip to Rack &quot;${rackID}&quot; Panel &quot;${panelID}&quot; Row &quot;${row}&quot; Module &quot;${module}&quot; Port &quot;${i}&quot;" library="VirtualPanelDefinitions">
<kw name="Get 24F Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
<arg>${module}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200109 17:02:37.072" level="INFO">Length is 12</msg>
<msg timestamp="20200109 17:02:37.072" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200109 17:02:37.072" endtime="20200109 17:02:37.072"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${input module}' == 'A' or '${input module}' == 'a' or '${input module}' == 'B' or '${input module}' == 'b'</arg>
<arg>Set Variable</arg>
<arg>AB</arg>
<arg>ELSE IF</arg>
<arg>'${input module}' == 'C' or '${input module}' == 'c' or '${input module}' == 'D' or '${input module}' == 'd'</arg>
<arg>Set Variable</arg>
<arg>CD</arg>
</arguments>
<assign>
<var>${temp module}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AB</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:37.072" endtime="20200109 17:02:37.072"></status>
</kw>
<msg timestamp="20200109 17:02:37.072" level="INFO">${temp module} = AB</msg>
<status status="PASS" starttime="20200109 17:02:37.072" endtime="20200109 17:02:37.072"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:37.087" endtime="20200109 17:02:37.087"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:37.087" endtime="20200109 17:02:37.087"></status>
</kw>
<kw name="${panel index} = 1" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:37.087" endtime="20200109 17:02:37.087"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:37.087" endtime="20200109 17:02:37.087"></status>
</kw>
<kw name="${panel index} = 2" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:37.087" endtime="20200109 17:02:37.087"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:37.087" endtime="20200109 17:02:37.087"></status>
</kw>
<kw name="${panel index} = 3" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:37.087" endtime="20200109 17:02:37.103"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:37.087" endtime="20200109 17:02:37.103"></status>
</kw>
<kw name="${panel index} = 4" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:37.103" endtime="20200109 17:02:37.103"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:37.103" endtime="20200109 17:02:37.103"></status>
</kw>
<kw name="${panel index} = 5" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:37.103" endtime="20200109 17:02:37.103"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:37.103" endtime="20200109 17:02:37.103"></status>
</kw>
<kw name="${panel index} = 6" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:37.103" endtime="20200109 17:02:37.103"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:37.103" endtime="20200109 17:02:37.103"></status>
</kw>
<kw name="${panel index} = 7" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:37.103" endtime="20200109 17:02:37.103"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:37.103" endtime="20200109 17:02:37.103"></status>
</kw>
<kw name="${panel index} = 8" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:37.119" endtime="20200109 17:02:37.119"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:37.119" endtime="20200109 17:02:37.119"></status>
</kw>
<kw name="${panel index} = 9" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200109 17:02:37.119" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200109 17:02:37.119" endtime="20200109 17:02:37.119"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:37.119" endtime="20200109 17:02:37.119"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:37.119" endtime="20200109 17:02:37.119"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:37.072" endtime="20200109 17:02:37.119"></status>
</kw>
<msg timestamp="20200109 17:02:37.119" level="INFO">${panel index} = 10</msg>
<status status="PASS" starttime="20200109 17:02:37.072" endtime="20200109 17:02:37.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200109 17:02:37.134" level="INFO">10</msg>
<status status="PASS" starttime="20200109 17:02:37.134" endtime="20200109 17:02:37.134"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --plugin --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--module</arg>
<arg>${module}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200109 17:02:37.134" level="INFO">${completed command} = vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 3</msg>
<status status="PASS" starttime="20200109 17:02:37.134" endtime="20200109 17:02:37.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200109 17:02:37.134" level="INFO">vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 3</msg>
<status status="PASS" starttime="20200109 17:02:37.134" endtime="20200109 17:02:37.134"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200109 17:02:37.150" level="INFO">vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 3</msg>
<status status="PASS" starttime="20200109 17:02:37.134" endtime="20200109 17:02:37.150"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200109 17:02:39.151" level="INFO">${stdout} = result=success
command=plugin
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:02:37.150" endtime="20200109 17:02:39.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200109 17:02:39.151" level="INFO">result=success
command=plugin
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:02:39.151" endtime="20200109 17:02:39.151"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:37.134" endtime="20200109 17:02:39.151"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:37.072" endtime="20200109 17:02:39.151"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:37.072" endtime="20200109 17:02:39.151"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.777" endtime="20200109 17:02:39.151"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:32.777" endtime="20200109 17:02:39.151"></status>
</kw>
<kw name="When Select Tab End &quot;B&quot;" library="BulkPatchingPage">
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${end position}</arg>
</arguments>
<assign>
<var>${temp end position}</var>
</assign>
<msg timestamp="20200109 17:02:39.151" level="INFO">${temp end position} = b</msg>
<status status="PASS" starttime="20200109 17:02:39.151" endtime="20200109 17:02:39.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp end position}' == 'a'</arg>
<arg>Click Web Button</arg>
<arg>${tabEndA}</arg>
<arg>ELSE IF</arg>
<arg>'${temp end position}' == 'b'</arg>
<arg>Click Web Button</arg>
<arg>${tabEndB}</arg>
</arguments>
<kw name="Click Web Button" library="GeneralPage">
<arguments>
<arg>${tabEndB}</arg>
</arguments>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<assign>
<var>${button exist}</var>
</assign>
<msg timestamp="20200109 17:02:39.183" level="INFO">${button exist} = 1</msg>
<status status="PASS" starttime="20200109 17:02:39.151" endtime="20200109 17:02:39.183"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${button exist} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<msg timestamp="20200109 17:02:39.183" level="INFO">Clicking element '//div[@id='btn-end-b']'.</msg>
<status status="PASS" starttime="20200109 17:02:39.183" endtime="20200109 17:02:39.264"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200109 17:02:40.278" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200109 17:02:39.265" endtime="20200109 17:02:40.278"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:39.264" endtime="20200109 17:02:40.278"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:39.183" endtime="20200109 17:02:40.278"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:39.183" endtime="20200109 17:02:40.278"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:39.183" endtime="20200109 17:02:40.278"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:39.151" endtime="20200109 17:02:40.278"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:39.151" endtime="20200109 17:02:40.278"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200109 17:02:41.279" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200109 17:02:40.278" endtime="20200109 17:02:41.279"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:40.278" endtime="20200109 17:02:41.279"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:39.151" endtime="20200109 17:02:41.279"></status>
</kw>
<kw name="When Plugin Serial 24F Tip to Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; Module &quot;A&quot; from Port &quot;4&quot; to Port &quot;6&quot;" library="VirtualPanelDefinitions">
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${port1ID}</arg>
</arguments>
<assign>
<var>${from port}</var>
</assign>
<msg timestamp="20200109 17:02:41.279" level="INFO">${from port} = 4</msg>
<status status="PASS" starttime="20200109 17:02:41.279" endtime="20200109 17:02:41.279"></status>
</kw>
<kw name="Convert To Integer" library="BuiltIn">
<doc>Converts the given item to an integer number.</doc>
<arguments>
<arg>${port2ID}</arg>
</arguments>
<assign>
<var>${to port}</var>
</assign>
<msg timestamp="20200109 17:02:41.279" level="INFO">${to port} = 6</msg>
<status status="PASS" starttime="20200109 17:02:41.279" endtime="20200109 17:02:41.279"></status>
</kw>
<kw name="${i} IN RANGE [ ${from port} | ${to port+1} ]" type="for">
<kw name="${i} = 4" type="foritem">
<kw name="Plugin 24F Tip to Rack &quot;${rackID}&quot; Panel &quot;${panelID}&quot; Row &quot;${row}&quot; Module &quot;${module}&quot; Port &quot;${i}&quot;" library="VirtualPanelDefinitions">
<kw name="Get 24F Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
<arg>${module}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200109 17:02:41.279" level="INFO">Length is 12</msg>
<msg timestamp="20200109 17:02:41.279" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200109 17:02:41.279" endtime="20200109 17:02:41.279"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${input module}' == 'A' or '${input module}' == 'a' or '${input module}' == 'B' or '${input module}' == 'b'</arg>
<arg>Set Variable</arg>
<arg>AB</arg>
<arg>ELSE IF</arg>
<arg>'${input module}' == 'C' or '${input module}' == 'c' or '${input module}' == 'D' or '${input module}' == 'd'</arg>
<arg>Set Variable</arg>
<arg>CD</arg>
</arguments>
<assign>
<var>${temp module}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AB</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:41.279" endtime="20200109 17:02:41.279"></status>
</kw>
<msg timestamp="20200109 17:02:41.279" level="INFO">${temp module} = AB</msg>
<status status="PASS" starttime="20200109 17:02:41.279" endtime="20200109 17:02:41.279"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:41.279" endtime="20200109 17:02:41.279"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.279" endtime="20200109 17:02:41.279"></status>
</kw>
<kw name="${panel index} = 1" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:41.295" endtime="20200109 17:02:41.295"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.279" endtime="20200109 17:02:41.295"></status>
</kw>
<kw name="${panel index} = 2" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:41.295" endtime="20200109 17:02:41.295"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.295" endtime="20200109 17:02:41.295"></status>
</kw>
<kw name="${panel index} = 3" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:41.295" endtime="20200109 17:02:41.295"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.295" endtime="20200109 17:02:41.295"></status>
</kw>
<kw name="${panel index} = 4" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:41.295" endtime="20200109 17:02:41.295"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.295" endtime="20200109 17:02:41.295"></status>
</kw>
<kw name="${panel index} = 5" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:41.295" endtime="20200109 17:02:41.295"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.295" endtime="20200109 17:02:41.295"></status>
</kw>
<kw name="${panel index} = 6" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:41.310" endtime="20200109 17:02:41.310"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.295" endtime="20200109 17:02:41.310"></status>
</kw>
<kw name="${panel index} = 7" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:41.310" endtime="20200109 17:02:41.310"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.310" endtime="20200109 17:02:41.310"></status>
</kw>
<kw name="${panel index} = 8" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:41.310" endtime="20200109 17:02:41.310"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.310" endtime="20200109 17:02:41.310"></status>
</kw>
<kw name="${panel index} = 9" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200109 17:02:41.310" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200109 17:02:41.310" endtime="20200109 17:02:41.310"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.310" endtime="20200109 17:02:41.310"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.310" endtime="20200109 17:02:41.310"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.279" endtime="20200109 17:02:41.310"></status>
</kw>
<msg timestamp="20200109 17:02:41.310" level="INFO">${panel index} = 10</msg>
<status status="PASS" starttime="20200109 17:02:41.279" endtime="20200109 17:02:41.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200109 17:02:41.310" level="INFO">10</msg>
<status status="PASS" starttime="20200109 17:02:41.310" endtime="20200109 17:02:41.310"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --plugin --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--module</arg>
<arg>${module}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200109 17:02:41.326" level="INFO">${completed command} = vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 4</msg>
<status status="PASS" starttime="20200109 17:02:41.326" endtime="20200109 17:02:41.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200109 17:02:41.326" level="INFO">vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 4</msg>
<status status="PASS" starttime="20200109 17:02:41.326" endtime="20200109 17:02:41.326"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200109 17:02:41.373" level="INFO">vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 4</msg>
<status status="PASS" starttime="20200109 17:02:41.326" endtime="20200109 17:02:41.373"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200109 17:02:43.378" level="INFO">${stdout} = result=success
command=plugin
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:02:41.373" endtime="20200109 17:02:43.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200109 17:02:43.378" level="INFO">result=success
command=plugin
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:02:43.378" endtime="20200109 17:02:43.378"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.326" endtime="20200109 17:02:43.378"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.279" endtime="20200109 17:02:43.378"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.279" endtime="20200109 17:02:43.378"></status>
</kw>
<kw name="${i} = 5" type="foritem">
<kw name="Plugin 24F Tip to Rack &quot;${rackID}&quot; Panel &quot;${panelID}&quot; Row &quot;${row}&quot; Module &quot;${module}&quot; Port &quot;${i}&quot;" library="VirtualPanelDefinitions">
<kw name="Get 24F Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
<arg>${module}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200109 17:02:43.378" level="INFO">Length is 12</msg>
<msg timestamp="20200109 17:02:43.378" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200109 17:02:43.378" endtime="20200109 17:02:43.378"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${input module}' == 'A' or '${input module}' == 'a' or '${input module}' == 'B' or '${input module}' == 'b'</arg>
<arg>Set Variable</arg>
<arg>AB</arg>
<arg>ELSE IF</arg>
<arg>'${input module}' == 'C' or '${input module}' == 'c' or '${input module}' == 'D' or '${input module}' == 'd'</arg>
<arg>Set Variable</arg>
<arg>CD</arg>
</arguments>
<assign>
<var>${temp module}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AB</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:43.378" endtime="20200109 17:02:43.378"></status>
</kw>
<msg timestamp="20200109 17:02:43.378" level="INFO">${temp module} = AB</msg>
<status status="PASS" starttime="20200109 17:02:43.378" endtime="20200109 17:02:43.394"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:43.394" endtime="20200109 17:02:43.394"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:43.394" endtime="20200109 17:02:43.394"></status>
</kw>
<kw name="${panel index} = 1" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:43.394" endtime="20200109 17:02:43.394"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:43.394" endtime="20200109 17:02:43.394"></status>
</kw>
<kw name="${panel index} = 2" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:43.394" endtime="20200109 17:02:43.394"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:43.394" endtime="20200109 17:02:43.394"></status>
</kw>
<kw name="${panel index} = 3" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:43.394" endtime="20200109 17:02:43.409"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:43.394" endtime="20200109 17:02:43.409"></status>
</kw>
<kw name="${panel index} = 4" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:43.409" endtime="20200109 17:02:43.409"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:43.409" endtime="20200109 17:02:43.409"></status>
</kw>
<kw name="${panel index} = 5" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:43.409" endtime="20200109 17:02:43.409"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:43.409" endtime="20200109 17:02:43.409"></status>
</kw>
<kw name="${panel index} = 6" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:43.409" endtime="20200109 17:02:43.409"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:43.409" endtime="20200109 17:02:43.409"></status>
</kw>
<kw name="${panel index} = 7" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:43.409" endtime="20200109 17:02:43.409"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:43.409" endtime="20200109 17:02:43.409"></status>
</kw>
<kw name="${panel index} = 8" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:43.425" endtime="20200109 17:02:43.425"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:43.409" endtime="20200109 17:02:43.425"></status>
</kw>
<kw name="${panel index} = 9" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200109 17:02:43.425" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200109 17:02:43.425" endtime="20200109 17:02:43.425"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:43.425" endtime="20200109 17:02:43.425"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:43.425" endtime="20200109 17:02:43.425"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:43.394" endtime="20200109 17:02:43.425"></status>
</kw>
<msg timestamp="20200109 17:02:43.425" level="INFO">${panel index} = 10</msg>
<status status="PASS" starttime="20200109 17:02:43.378" endtime="20200109 17:02:43.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200109 17:02:43.425" level="INFO">10</msg>
<status status="PASS" starttime="20200109 17:02:43.425" endtime="20200109 17:02:43.425"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --plugin --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--module</arg>
<arg>${module}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200109 17:02:43.425" level="INFO">${completed command} = vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 5</msg>
<status status="PASS" starttime="20200109 17:02:43.425" endtime="20200109 17:02:43.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200109 17:02:43.425" level="INFO">vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 5</msg>
<status status="PASS" starttime="20200109 17:02:43.425" endtime="20200109 17:02:43.425"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200109 17:02:43.487" level="INFO">vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 5</msg>
<status status="PASS" starttime="20200109 17:02:43.425" endtime="20200109 17:02:43.487"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200109 17:02:45.496" level="INFO">${stdout} = result=success
command=plugin
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:02:43.487" endtime="20200109 17:02:45.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200109 17:02:45.496" level="INFO">result=success
command=plugin
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:02:45.496" endtime="20200109 17:02:45.496"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:43.425" endtime="20200109 17:02:45.496"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:43.378" endtime="20200109 17:02:45.496"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:43.378" endtime="20200109 17:02:45.496"></status>
</kw>
<kw name="${i} = 6" type="foritem">
<kw name="Plugin 24F Tip to Rack &quot;${rackID}&quot; Panel &quot;${panelID}&quot; Row &quot;${row}&quot; Module &quot;${module}&quot; Port &quot;${i}&quot;" library="VirtualPanelDefinitions">
<kw name="Get 24F Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
<arg>${module}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200109 17:02:45.496" level="INFO">Length is 12</msg>
<msg timestamp="20200109 17:02:45.496" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200109 17:02:45.496" endtime="20200109 17:02:45.496"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${input module}' == 'A' or '${input module}' == 'a' or '${input module}' == 'B' or '${input module}' == 'b'</arg>
<arg>Set Variable</arg>
<arg>AB</arg>
<arg>ELSE IF</arg>
<arg>'${input module}' == 'C' or '${input module}' == 'c' or '${input module}' == 'D' or '${input module}' == 'd'</arg>
<arg>Set Variable</arg>
<arg>CD</arg>
</arguments>
<assign>
<var>${temp module}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AB</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:45.496" endtime="20200109 17:02:45.496"></status>
</kw>
<msg timestamp="20200109 17:02:45.496" level="INFO">${temp module} = AB</msg>
<status status="PASS" starttime="20200109 17:02:45.496" endtime="20200109 17:02:45.512"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:45.512" endtime="20200109 17:02:45.512"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:45.512" endtime="20200109 17:02:45.512"></status>
</kw>
<kw name="${panel index} = 1" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:45.512" endtime="20200109 17:02:45.512"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:45.512" endtime="20200109 17:02:45.512"></status>
</kw>
<kw name="${panel index} = 2" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:45.512" endtime="20200109 17:02:45.528"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:45.512" endtime="20200109 17:02:45.528"></status>
</kw>
<kw name="${panel index} = 3" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:45.528" endtime="20200109 17:02:45.528"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:45.528" endtime="20200109 17:02:45.528"></status>
</kw>
<kw name="${panel index} = 4" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:45.528" endtime="20200109 17:02:45.528"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:45.528" endtime="20200109 17:02:45.528"></status>
</kw>
<kw name="${panel index} = 5" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:45.528" endtime="20200109 17:02:45.528"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:45.528" endtime="20200109 17:02:45.528"></status>
</kw>
<kw name="${panel index} = 6" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:45.528" endtime="20200109 17:02:45.528"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:45.528" endtime="20200109 17:02:45.528"></status>
</kw>
<kw name="${panel index} = 7" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:45.528" endtime="20200109 17:02:45.528"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:45.528" endtime="20200109 17:02:45.543"></status>
</kw>
<kw name="${panel index} = 8" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:02:45.543" endtime="20200109 17:02:45.543"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:45.543" endtime="20200109 17:02:45.543"></status>
</kw>
<kw name="${panel index} = 9" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200109 17:02:45.543" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200109 17:02:45.543" endtime="20200109 17:02:45.543"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:45.543" endtime="20200109 17:02:45.543"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:45.543" endtime="20200109 17:02:45.543"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:45.512" endtime="20200109 17:02:45.543"></status>
</kw>
<msg timestamp="20200109 17:02:45.543" level="INFO">${panel index} = 10</msg>
<status status="PASS" starttime="20200109 17:02:45.496" endtime="20200109 17:02:45.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200109 17:02:45.543" level="INFO">10</msg>
<status status="PASS" starttime="20200109 17:02:45.543" endtime="20200109 17:02:45.543"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --plugin --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--module</arg>
<arg>${module}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200109 17:02:45.543" level="INFO">${completed command} = vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 6</msg>
<status status="PASS" starttime="20200109 17:02:45.543" endtime="20200109 17:02:45.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200109 17:02:45.543" level="INFO">vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 6</msg>
<status status="PASS" starttime="20200109 17:02:45.543" endtime="20200109 17:02:45.543"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200109 17:02:45.637" level="INFO">vp_cmd_helper --plugin --rack 1 --panel 10 --module A --port 6</msg>
<status status="PASS" starttime="20200109 17:02:45.543" endtime="20200109 17:02:45.637"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200109 17:02:47.643" level="INFO">${stdout} = result=success
command=plugin
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:02:45.637" endtime="20200109 17:02:47.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200109 17:02:47.643" level="INFO">result=success
command=plugin
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:02:47.643" endtime="20200109 17:02:47.643"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:45.543" endtime="20200109 17:02:47.643"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:45.496" endtime="20200109 17:02:47.643"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:45.496" endtime="20200109 17:02:47.643"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.279" endtime="20200109 17:02:47.643"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:41.279" endtime="20200109 17:02:47.643"></status>
</kw>
<kw name="And Wait For Bulk Patching Timeout" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${SHORT TIMEOUT}</arg>
</arguments>
<msg timestamp="20200109 17:07:52.654" level="INFO">Slept 5 minutes 5 seconds</msg>
<status status="PASS" starttime="20200109 17:02:47.643" endtime="20200109 17:07:52.654"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:47.643" endtime="20200109 17:07:52.654"></status>
</kw>
<kw name="Then Bulk Patching Screen Should Be &quot;disappeared&quot;" library="BulkPatchingDefinitions">
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<assign>
<var>${temp status}</var>
</assign>
<msg timestamp="20200109 17:07:52.654" level="INFO">${temp status} = disappeared</msg>
<status status="PASS" starttime="20200109 17:07:52.654" endtime="20200109 17:07:52.654"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp status}' == 'appeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Page Should Contain Element</arg>
<arg>${lblBulk Patching Title}</arg>
<arg>ELSE IF</arg>
<arg>'${temp status}' == 'disappeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Page Should Not Contain Element</arg>
<arg>${lblBulk Patching Title}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Page Should Not Contain Element</arg>
<arg>${lblBulk Patching Title}</arg>
</arguments>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<arguments>
<arg>${lblBulk Patching Title}</arg>
</arguments>
<msg timestamp="20200109 17:07:52.685" level="INFO">Current page does not contain element '//div[@id='bulk-patch-title' and @style='display: block;']'.</msg>
<status status="PASS" starttime="20200109 17:07:52.654" endtime="20200109 17:07:52.685"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.654" endtime="20200109 17:07:52.685"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.654" endtime="20200109 17:07:52.685"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.654" endtime="20200109 17:07:52.685"></status>
</kw>
<kw name="Then Confirm Button is &quot;disappeared&quot;" library="GeneralDefinitions">
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<assign>
<var>${temp status}</var>
</assign>
<msg timestamp="20200109 17:07:52.685" level="INFO">${temp status} = disappeared</msg>
<status status="PASS" starttime="20200109 17:07:52.685" endtime="20200109 17:07:52.685"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp status}' == 'appeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Element Should Be Visible</arg>
<arg>${btnConfirm}</arg>
<arg>ELSE IF</arg>
<arg>'${temp status}' == 'disappeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Element Should Not Be Visible</arg>
<arg>${btnConfirm}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Element Should Not Be Visible</arg>
<arg>${btnConfirm}</arg>
</arguments>
<kw name="Element Should Not Be Visible" library="SeleniumLibrary">
<doc>Verifies that the element identified by ``locator`` is NOT visible.</doc>
<arguments>
<arg>${btnConfirm}</arg>
</arguments>
<msg timestamp="20200109 17:07:52.701" level="INFO">Element '//div[@id='confirms' and @style='visibility: visible;']//input[@type='submit']' did not exist.</msg>
<status status="PASS" starttime="20200109 17:07:52.685" endtime="20200109 17:07:52.701"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.685" endtime="20200109 17:07:52.701"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.685" endtime="20200109 17:07:52.701"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.685" endtime="20200109 17:07:52.701"></status>
</kw>
<kw name="And Press 24F port at Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; ModuleHD &quot;A&quot; Port &quot;1&quot; with keymode &quot;short&quot;" library="VirtualPanelDefinitions">
<doc>This keyword is used to press on a specific Copper port regarding to type of keymode</doc>
<kw name="Get 24F Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
<arg>${moduleHD}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200109 17:07:52.701" level="INFO">Length is 12</msg>
<msg timestamp="20200109 17:07:52.701" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200109 17:07:52.701" endtime="20200109 17:07:52.701"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${input module}' == 'A' or '${input module}' == 'a' or '${input module}' == 'B' or '${input module}' == 'b'</arg>
<arg>Set Variable</arg>
<arg>AB</arg>
<arg>ELSE IF</arg>
<arg>'${input module}' == 'C' or '${input module}' == 'c' or '${input module}' == 'D' or '${input module}' == 'd'</arg>
<arg>Set Variable</arg>
<arg>CD</arg>
</arguments>
<assign>
<var>${temp module}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AB</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:52.701" endtime="20200109 17:07:52.701"></status>
</kw>
<msg timestamp="20200109 17:07:52.701" level="INFO">${temp module} = AB</msg>
<status status="PASS" starttime="20200109 17:07:52.701" endtime="20200109 17:07:52.716"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:52.716" endtime="20200109 17:07:52.716"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.716" endtime="20200109 17:07:52.716"></status>
</kw>
<kw name="${panel index} = 1" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:52.716" endtime="20200109 17:07:52.716"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.716" endtime="20200109 17:07:52.716"></status>
</kw>
<kw name="${panel index} = 2" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:52.716" endtime="20200109 17:07:52.716"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.716" endtime="20200109 17:07:52.716"></status>
</kw>
<kw name="${panel index} = 3" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:52.716" endtime="20200109 17:07:52.716"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.716" endtime="20200109 17:07:52.716"></status>
</kw>
<kw name="${panel index} = 4" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:52.716" endtime="20200109 17:07:52.716"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.716" endtime="20200109 17:07:52.716"></status>
</kw>
<kw name="${panel index} = 5" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:52.732" endtime="20200109 17:07:52.732"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.716" endtime="20200109 17:07:52.732"></status>
</kw>
<kw name="${panel index} = 6" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:52.732" endtime="20200109 17:07:52.732"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.732" endtime="20200109 17:07:52.732"></status>
</kw>
<kw name="${panel index} = 7" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:52.732" endtime="20200109 17:07:52.732"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.732" endtime="20200109 17:07:52.732"></status>
</kw>
<kw name="${panel index} = 8" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:52.732" endtime="20200109 17:07:52.732"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.732" endtime="20200109 17:07:52.732"></status>
</kw>
<kw name="${panel index} = 9" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200109 17:07:52.732" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200109 17:07:52.732" endtime="20200109 17:07:52.732"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.732" endtime="20200109 17:07:52.732"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.732" endtime="20200109 17:07:52.732"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.716" endtime="20200109 17:07:52.732"></status>
</kw>
<msg timestamp="20200109 17:07:52.748" level="INFO">${panel index} = 10</msg>
<status status="PASS" starttime="20200109 17:07:52.701" endtime="20200109 17:07:52.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200109 17:07:52.748" level="INFO">10</msg>
<status status="PASS" starttime="20200109 17:07:52.748" endtime="20200109 17:07:52.748"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --press --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--module</arg>
<arg>${moduleHD}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
<arg>--keymode</arg>
<arg>${keyMode}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200109 17:07:52.748" level="INFO">${completed command} = vp_cmd_helper --press --rack 1 --panel 10 --module A --port 1 --keymode short</msg>
<status status="PASS" starttime="20200109 17:07:52.748" endtime="20200109 17:07:52.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200109 17:07:52.748" level="INFO">vp_cmd_helper --press --rack 1 --panel 10 --module A --port 1 --keymode short</msg>
<status status="PASS" starttime="20200109 17:07:52.748" endtime="20200109 17:07:52.748"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200109 17:07:52.779" level="INFO">vp_cmd_helper --press --rack 1 --panel 10 --module A --port 1 --keymode short</msg>
<status status="PASS" starttime="20200109 17:07:52.748" endtime="20200109 17:07:52.779"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200109 17:07:54.793" level="INFO">${stdout} = result=success
command=press
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:07:52.779" endtime="20200109 17:07:54.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200109 17:07:54.793" level="INFO">result=success
command=press
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:07:54.793" endtime="20200109 17:07:54.793"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.748" endtime="20200109 17:07:54.793"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:52.701" endtime="20200109 17:07:54.793"></status>
</kw>
<kw name="Then Check if Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; Port &quot;1&quot; &quot;appeared&quot; in Trace screen" library="TraceDefinitions">
<doc>This keyword is used to check the information of Copper panel displaying in the same information rectangle area</doc>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Rack</arg>
<arg>00</arg>
</arguments>
<assign>
<var>${temp rack}</var>
</assign>
<msg timestamp="20200109 17:07:54.793" level="INFO">${temp rack} = Rack 00</msg>
<status status="PASS" starttime="20200109 17:07:54.793" endtime="20200109 17:07:54.793"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp rack}</arg>
<arg>${rackID}</arg>
</arguments>
<assign>
<var>${input rack}</var>
</assign>
<msg timestamp="20200109 17:07:54.793" level="INFO">${input rack} = Rack 001</msg>
<status status="PASS" starttime="20200109 17:07:54.793" endtime="20200109 17:07:54.793"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Panel</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${temp panel}</var>
</assign>
<msg timestamp="20200109 17:07:54.793" level="INFO">${temp panel} = Panel 0</msg>
<status status="PASS" starttime="20200109 17:07:54.793" endtime="20200109 17:07:54.793"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp panel}</arg>
<arg>${panelID}</arg>
</arguments>
<assign>
<var>${input panel}</var>
</assign>
<msg timestamp="20200109 17:07:54.793" level="INFO">${input panel} = Panel 06</msg>
<status status="PASS" starttime="20200109 17:07:54.793" endtime="20200109 17:07:54.793"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Port</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${temp port}</var>
</assign>
<msg timestamp="20200109 17:07:54.809" level="INFO">${temp port} = Port 0</msg>
<status status="PASS" starttime="20200109 17:07:54.793" endtime="20200109 17:07:54.809"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp port}</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${input port}</var>
</assign>
<msg timestamp="20200109 17:07:54.809" level="INFO">${input port} = Port 01</msg>
<status status="PASS" starttime="20200109 17:07:54.809" endtime="20200109 17:07:54.809"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input rack}</arg>
</arguments>
<assign>
<var>${temp rack 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:54.809" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Rack 001')]</msg>
<status status="PASS" starttime="20200109 17:07:54.809" endtime="20200109 17:07:54.809"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:54.825" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.809" endtime="20200109 17:07:54.825"></status>
</kw>
<msg timestamp="20200109 17:07:54.840" level="INFO">${temp rack 1} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.809" endtime="20200109 17:07:54.840"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input panel}</arg>
</arguments>
<assign>
<var>${temp panel 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:54.840" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Panel 06')]</msg>
<status status="PASS" starttime="20200109 17:07:54.840" endtime="20200109 17:07:54.840"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:54.856" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.840" endtime="20200109 17:07:54.856"></status>
</kw>
<msg timestamp="20200109 17:07:54.856" level="INFO">${temp panel 1} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.840" endtime="20200109 17:07:54.856"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input port}</arg>
</arguments>
<assign>
<var>${temp port 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:54.856" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Port 01')]</msg>
<status status="PASS" starttime="20200109 17:07:54.856" endtime="20200109 17:07:54.856"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:54.872" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.856" endtime="20200109 17:07:54.872"></status>
</kw>
<msg timestamp="20200109 17:07:54.872" level="INFO">${temp port 1} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.856" endtime="20200109 17:07:54.872"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input rack}</arg>
</arguments>
<assign>
<var>${temp rack 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:54.872" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Rack 001')]</msg>
<status status="PASS" starttime="20200109 17:07:54.872" endtime="20200109 17:07:54.872"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:54.887" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.872" endtime="20200109 17:07:54.887"></status>
</kw>
<msg timestamp="20200109 17:07:54.887" level="INFO">${temp rack 2} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.872" endtime="20200109 17:07:54.887"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input panel}</arg>
</arguments>
<assign>
<var>${temp panel 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:54.887" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Panel 06')]</msg>
<status status="PASS" starttime="20200109 17:07:54.887" endtime="20200109 17:07:54.887"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:54.903" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.887" endtime="20200109 17:07:54.903"></status>
</kw>
<msg timestamp="20200109 17:07:54.903" level="INFO">${temp panel 2} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.887" endtime="20200109 17:07:54.903"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input port}</arg>
</arguments>
<assign>
<var>${temp port 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:54.903" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Port 01')]</msg>
<status status="PASS" starttime="20200109 17:07:54.903" endtime="20200109 17:07:54.903"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:54.918" level="INFO">${result} = 0</msg>
<status status="PASS" starttime="20200109 17:07:54.903" endtime="20200109 17:07:54.918"></status>
</kw>
<msg timestamp="20200109 17:07:54.918" level="INFO">${temp port 2} = 0</msg>
<status status="PASS" starttime="20200109 17:07:54.903" endtime="20200109 17:07:54.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${temp rack 1} == 1 and ${temp panel 1} == 1 and ${temp port 1} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${infor belong to left rectangle}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:54.934"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:54.934"></status>
</kw>
<msg timestamp="20200109 17:07:54.934" level="INFO">${infor belong to left rectangle} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.918" endtime="20200109 17:07:54.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${temp rack 2} == 1 and ${temp panel 2} == 1 and ${temp port 2} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${infor belong to right rectangle}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:54.934"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:54.934"></status>
</kw>
<msg timestamp="20200109 17:07:54.934" level="INFO">${infor belong to right rectangle} = 0</msg>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:54.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${infor belong to left rectangle} == 1 or ${infor belong to right rectangle} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:54.934"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:54.934"></status>
</kw>
<msg timestamp="20200109 17:07:54.934" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:54.934"></status>
</kw>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<assign>
<var>${temp status}</var>
</assign>
<msg timestamp="20200109 17:07:54.934" level="INFO">${temp status} = appeared</msg>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:54.934"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp status}' == 'appeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>'${temp status}' == 'disappeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${expected value}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:54.934"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:54.934"></status>
</kw>
<msg timestamp="20200109 17:07:54.934" level="INFO">${expected value} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:54.934"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>Port information is not ${status}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>Port information is not ${status}</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:54.934"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:54.934"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:54.793" endtime="20200109 17:07:54.934"></status>
</kw>
<kw name="Then Check if Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; Port &quot;4&quot; &quot;appeared&quot; in Trace screen" library="TraceDefinitions">
<doc>This keyword is used to check the information of Copper panel displaying in the same information rectangle area</doc>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Rack</arg>
<arg>00</arg>
</arguments>
<assign>
<var>${temp rack}</var>
</assign>
<msg timestamp="20200109 17:07:54.934" level="INFO">${temp rack} = Rack 00</msg>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:54.934"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp rack}</arg>
<arg>${rackID}</arg>
</arguments>
<assign>
<var>${input rack}</var>
</assign>
<msg timestamp="20200109 17:07:54.950" level="INFO">${input rack} = Rack 001</msg>
<status status="PASS" starttime="20200109 17:07:54.950" endtime="20200109 17:07:54.950"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Panel</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${temp panel}</var>
</assign>
<msg timestamp="20200109 17:07:54.950" level="INFO">${temp panel} = Panel 0</msg>
<status status="PASS" starttime="20200109 17:07:54.950" endtime="20200109 17:07:54.950"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp panel}</arg>
<arg>${panelID}</arg>
</arguments>
<assign>
<var>${input panel}</var>
</assign>
<msg timestamp="20200109 17:07:54.950" level="INFO">${input panel} = Panel 06</msg>
<status status="PASS" starttime="20200109 17:07:54.950" endtime="20200109 17:07:54.950"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Port</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${temp port}</var>
</assign>
<msg timestamp="20200109 17:07:54.950" level="INFO">${temp port} = Port 0</msg>
<status status="PASS" starttime="20200109 17:07:54.950" endtime="20200109 17:07:54.950"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp port}</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${input port}</var>
</assign>
<msg timestamp="20200109 17:07:54.950" level="INFO">${input port} = Port 04</msg>
<status status="PASS" starttime="20200109 17:07:54.950" endtime="20200109 17:07:54.950"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input rack}</arg>
</arguments>
<assign>
<var>${temp rack 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:54.950" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Rack 001')]</msg>
<status status="PASS" starttime="20200109 17:07:54.950" endtime="20200109 17:07:54.950"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:54.965" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.950" endtime="20200109 17:07:54.965"></status>
</kw>
<msg timestamp="20200109 17:07:54.965" level="INFO">${temp rack 1} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.950" endtime="20200109 17:07:54.965"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input panel}</arg>
</arguments>
<assign>
<var>${temp panel 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:54.965" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Panel 06')]</msg>
<status status="PASS" starttime="20200109 17:07:54.965" endtime="20200109 17:07:54.965"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:54.981" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.965" endtime="20200109 17:07:54.981"></status>
</kw>
<msg timestamp="20200109 17:07:54.981" level="INFO">${temp panel 1} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.965" endtime="20200109 17:07:54.981"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input port}</arg>
</arguments>
<assign>
<var>${temp port 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:54.981" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Port 04')]</msg>
<status status="PASS" starttime="20200109 17:07:54.981" endtime="20200109 17:07:54.981"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:54.997" level="INFO">${result} = 0</msg>
<status status="PASS" starttime="20200109 17:07:54.981" endtime="20200109 17:07:54.997"></status>
</kw>
<msg timestamp="20200109 17:07:54.997" level="INFO">${temp port 1} = 0</msg>
<status status="PASS" starttime="20200109 17:07:54.981" endtime="20200109 17:07:54.997"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input rack}</arg>
</arguments>
<assign>
<var>${temp rack 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:54.997" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Rack 001')]</msg>
<status status="PASS" starttime="20200109 17:07:54.997" endtime="20200109 17:07:54.997"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:55.012" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.997" endtime="20200109 17:07:55.012"></status>
</kw>
<msg timestamp="20200109 17:07:55.012" level="INFO">${temp rack 2} = 1</msg>
<status status="PASS" starttime="20200109 17:07:54.997" endtime="20200109 17:07:55.012"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input panel}</arg>
</arguments>
<assign>
<var>${temp panel 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:55.012" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Panel 06')]</msg>
<status status="PASS" starttime="20200109 17:07:55.012" endtime="20200109 17:07:55.012"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:55.028" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:55.012" endtime="20200109 17:07:55.028"></status>
</kw>
<msg timestamp="20200109 17:07:55.028" level="INFO">${temp panel 2} = 1</msg>
<status status="PASS" starttime="20200109 17:07:55.012" endtime="20200109 17:07:55.028"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input port}</arg>
</arguments>
<assign>
<var>${temp port 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:55.028" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Port 04')]</msg>
<status status="PASS" starttime="20200109 17:07:55.028" endtime="20200109 17:07:55.028"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:55.043" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:55.028" endtime="20200109 17:07:55.043"></status>
</kw>
<msg timestamp="20200109 17:07:55.043" level="INFO">${temp port 2} = 1</msg>
<status status="PASS" starttime="20200109 17:07:55.028" endtime="20200109 17:07:55.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${temp rack 1} == 1 and ${temp panel 1} == 1 and ${temp port 1} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${infor belong to left rectangle}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.043" endtime="20200109 17:07:55.043"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.043" endtime="20200109 17:07:55.043"></status>
</kw>
<msg timestamp="20200109 17:07:55.043" level="INFO">${infor belong to left rectangle} = 0</msg>
<status status="PASS" starttime="20200109 17:07:55.043" endtime="20200109 17:07:55.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${temp rack 2} == 1 and ${temp panel 2} == 1 and ${temp port 2} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${infor belong to right rectangle}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.043" endtime="20200109 17:07:55.043"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.043" endtime="20200109 17:07:55.043"></status>
</kw>
<msg timestamp="20200109 17:07:55.043" level="INFO">${infor belong to right rectangle} = 1</msg>
<status status="PASS" starttime="20200109 17:07:55.043" endtime="20200109 17:07:55.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${infor belong to left rectangle} == 1 or ${infor belong to right rectangle} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.043" endtime="20200109 17:07:55.043"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.043" endtime="20200109 17:07:55.043"></status>
</kw>
<msg timestamp="20200109 17:07:55.043" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:55.043" endtime="20200109 17:07:55.043"></status>
</kw>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<assign>
<var>${temp status}</var>
</assign>
<msg timestamp="20200109 17:07:55.043" level="INFO">${temp status} = appeared</msg>
<status status="PASS" starttime="20200109 17:07:55.043" endtime="20200109 17:07:55.043"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp status}' == 'appeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>'${temp status}' == 'disappeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${expected value}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.043" endtime="20200109 17:07:55.059"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.043" endtime="20200109 17:07:55.059"></status>
</kw>
<msg timestamp="20200109 17:07:55.059" level="INFO">${expected value} = 1</msg>
<status status="PASS" starttime="20200109 17:07:55.043" endtime="20200109 17:07:55.059"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>Port information is not ${status}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>Port information is not ${status}</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.059" endtime="20200109 17:07:55.059"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.059" endtime="20200109 17:07:55.059"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:54.934" endtime="20200109 17:07:55.059"></status>
</kw>
<kw name="Then Check if the &quot;full&quot; of &quot;LC&quot; Patching Bar &quot;appeared&quot; in Trace screen" library="TraceDefinitions">
<doc>This keyword is used to check the portion of patching bar of Copper/ LC panel appeared/ disappeared in Trace screen</doc>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${portion}</arg>
</arguments>
<assign>
<var>${temp portion}</var>
</assign>
<msg timestamp="20200109 17:07:55.059" level="INFO">${temp portion} = full</msg>
<status status="PASS" starttime="20200109 17:07:55.059" endtime="20200109 17:07:55.059"></status>
</kw>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${panel type}</arg>
</arguments>
<assign>
<var>${temp panel type}</var>
</assign>
<msg timestamp="20200109 17:07:55.059" level="INFO">${temp panel type} = lc</msg>
<status status="PASS" starttime="20200109 17:07:55.059" endtime="20200109 17:07:55.059"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp portion}' == 'full' and '${temp panel type}' == 'copper'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>${barFullCopper}</arg>
<arg>ELSE IF</arg>
<arg>'${temp portion}' == 'haft' and '${temp panel type}' == 'copper'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>${barHaftCopper}</arg>
</arguments>
<assign>
<var>${replace panel type}</var>
</assign>
<msg timestamp="20200109 17:07:55.059" level="INFO">${replace panel type} = None</msg>
<status status="PASS" starttime="20200109 17:07:55.059" endtime="20200109 17:07:55.059"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${dynamic patching bar}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:55.075" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:55.059" endtime="20200109 17:07:55.075"></status>
</kw>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<assign>
<var>${temp status}</var>
</assign>
<msg timestamp="20200109 17:07:55.075" level="INFO">${temp status} = appeared</msg>
<status status="PASS" starttime="20200109 17:07:55.075" endtime="20200109 17:07:55.075"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp status}' == 'appeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>'${temp status}' == 'disappeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${expected value}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.075" endtime="20200109 17:07:55.075"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.075" endtime="20200109 17:07:55.075"></status>
</kw>
<msg timestamp="20200109 17:07:55.075" level="INFO">${expected value} = 1</msg>
<status status="PASS" starttime="20200109 17:07:55.075" endtime="20200109 17:07:55.075"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>The patching bar is not ${status}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>The patching bar is not ${status}</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.075" endtime="20200109 17:07:55.075"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.075" endtime="20200109 17:07:55.075"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.059" endtime="20200109 17:07:55.075"></status>
</kw>
<kw name="And Press 24F port at Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; ModuleHD &quot;A&quot; Port &quot;2&quot; with keymode &quot;short&quot;" library="VirtualPanelDefinitions">
<doc>This keyword is used to press on a specific Copper port regarding to type of keymode</doc>
<kw name="Get 24F Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
<arg>${moduleHD}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200109 17:07:55.090" level="INFO">Length is 12</msg>
<msg timestamp="20200109 17:07:55.090" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200109 17:07:55.090" endtime="20200109 17:07:55.090"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${input module}' == 'A' or '${input module}' == 'a' or '${input module}' == 'B' or '${input module}' == 'b'</arg>
<arg>Set Variable</arg>
<arg>AB</arg>
<arg>ELSE IF</arg>
<arg>'${input module}' == 'C' or '${input module}' == 'c' or '${input module}' == 'D' or '${input module}' == 'd'</arg>
<arg>Set Variable</arg>
<arg>CD</arg>
</arguments>
<assign>
<var>${temp module}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AB</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.090" endtime="20200109 17:07:55.090"></status>
</kw>
<msg timestamp="20200109 17:07:55.090" level="INFO">${temp module} = AB</msg>
<status status="PASS" starttime="20200109 17:07:55.090" endtime="20200109 17:07:55.090"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.090" endtime="20200109 17:07:55.090"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.090" endtime="20200109 17:07:55.090"></status>
</kw>
<kw name="${panel index} = 1" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.090" endtime="20200109 17:07:55.090"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.090" endtime="20200109 17:07:55.090"></status>
</kw>
<kw name="${panel index} = 2" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.090" endtime="20200109 17:07:55.090"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.090" endtime="20200109 17:07:55.090"></status>
</kw>
<kw name="${panel index} = 3" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.090" endtime="20200109 17:07:55.090"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.090" endtime="20200109 17:07:55.090"></status>
</kw>
<kw name="${panel index} = 4" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.106" endtime="20200109 17:07:55.106"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.090" endtime="20200109 17:07:55.106"></status>
</kw>
<kw name="${panel index} = 5" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.106" endtime="20200109 17:07:55.106"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.106" endtime="20200109 17:07:55.106"></status>
</kw>
<kw name="${panel index} = 6" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.106" endtime="20200109 17:07:55.106"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.106" endtime="20200109 17:07:55.106"></status>
</kw>
<kw name="${panel index} = 7" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.106" endtime="20200109 17:07:55.106"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.106" endtime="20200109 17:07:55.106"></status>
</kw>
<kw name="${panel index} = 8" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:55.106" endtime="20200109 17:07:55.106"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.106" endtime="20200109 17:07:55.106"></status>
</kw>
<kw name="${panel index} = 9" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200109 17:07:55.122" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200109 17:07:55.122" endtime="20200109 17:07:55.122"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.106" endtime="20200109 17:07:55.122"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.106" endtime="20200109 17:07:55.122"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.090" endtime="20200109 17:07:55.122"></status>
</kw>
<msg timestamp="20200109 17:07:55.122" level="INFO">${panel index} = 10</msg>
<status status="PASS" starttime="20200109 17:07:55.075" endtime="20200109 17:07:55.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200109 17:07:55.122" level="INFO">10</msg>
<status status="PASS" starttime="20200109 17:07:55.122" endtime="20200109 17:07:55.122"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --press --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--module</arg>
<arg>${moduleHD}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
<arg>--keymode</arg>
<arg>${keyMode}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200109 17:07:55.122" level="INFO">${completed command} = vp_cmd_helper --press --rack 1 --panel 10 --module A --port 2 --keymode short</msg>
<status status="PASS" starttime="20200109 17:07:55.122" endtime="20200109 17:07:55.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200109 17:07:55.122" level="INFO">vp_cmd_helper --press --rack 1 --panel 10 --module A --port 2 --keymode short</msg>
<status status="PASS" starttime="20200109 17:07:55.122" endtime="20200109 17:07:55.122"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200109 17:07:55.200" level="INFO">vp_cmd_helper --press --rack 1 --panel 10 --module A --port 2 --keymode short</msg>
<status status="PASS" starttime="20200109 17:07:55.122" endtime="20200109 17:07:55.200"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200109 17:07:57.202" level="INFO">${stdout} = result=success
command=press
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:07:55.200" endtime="20200109 17:07:57.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200109 17:07:57.202" level="INFO">result=success
command=press
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:07:57.202" endtime="20200109 17:07:57.202"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.122" endtime="20200109 17:07:57.202"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:55.075" endtime="20200109 17:07:57.202"></status>
</kw>
<kw name="Then Check if Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; Port &quot;2&quot; &quot;appeared&quot; in Trace screen" library="TraceDefinitions">
<doc>This keyword is used to check the information of Copper panel displaying in the same information rectangle area</doc>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Rack</arg>
<arg>00</arg>
</arguments>
<assign>
<var>${temp rack}</var>
</assign>
<msg timestamp="20200109 17:07:57.202" level="INFO">${temp rack} = Rack 00</msg>
<status status="PASS" starttime="20200109 17:07:57.202" endtime="20200109 17:07:57.202"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp rack}</arg>
<arg>${rackID}</arg>
</arguments>
<assign>
<var>${input rack}</var>
</assign>
<msg timestamp="20200109 17:07:57.202" level="INFO">${input rack} = Rack 001</msg>
<status status="PASS" starttime="20200109 17:07:57.202" endtime="20200109 17:07:57.202"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Panel</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${temp panel}</var>
</assign>
<msg timestamp="20200109 17:07:57.202" level="INFO">${temp panel} = Panel 0</msg>
<status status="PASS" starttime="20200109 17:07:57.202" endtime="20200109 17:07:57.202"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp panel}</arg>
<arg>${panelID}</arg>
</arguments>
<assign>
<var>${input panel}</var>
</assign>
<msg timestamp="20200109 17:07:57.202" level="INFO">${input panel} = Panel 06</msg>
<status status="PASS" starttime="20200109 17:07:57.202" endtime="20200109 17:07:57.202"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Port</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${temp port}</var>
</assign>
<msg timestamp="20200109 17:07:57.218" level="INFO">${temp port} = Port 0</msg>
<status status="PASS" starttime="20200109 17:07:57.202" endtime="20200109 17:07:57.218"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp port}</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${input port}</var>
</assign>
<msg timestamp="20200109 17:07:57.218" level="INFO">${input port} = Port 02</msg>
<status status="PASS" starttime="20200109 17:07:57.218" endtime="20200109 17:07:57.218"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input rack}</arg>
</arguments>
<assign>
<var>${temp rack 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:57.218" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Rack 001')]</msg>
<status status="PASS" starttime="20200109 17:07:57.218" endtime="20200109 17:07:57.218"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:57.234" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.218" endtime="20200109 17:07:57.249"></status>
</kw>
<msg timestamp="20200109 17:07:57.249" level="INFO">${temp rack 1} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.218" endtime="20200109 17:07:57.249"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input panel}</arg>
</arguments>
<assign>
<var>${temp panel 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:57.249" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Panel 06')]</msg>
<status status="PASS" starttime="20200109 17:07:57.249" endtime="20200109 17:07:57.249"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:57.265" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.249" endtime="20200109 17:07:57.265"></status>
</kw>
<msg timestamp="20200109 17:07:57.265" level="INFO">${temp panel 1} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.249" endtime="20200109 17:07:57.265"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input port}</arg>
</arguments>
<assign>
<var>${temp port 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:57.265" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Port 02')]</msg>
<status status="PASS" starttime="20200109 17:07:57.265" endtime="20200109 17:07:57.265"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:57.280" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.265" endtime="20200109 17:07:57.280"></status>
</kw>
<msg timestamp="20200109 17:07:57.280" level="INFO">${temp port 1} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.265" endtime="20200109 17:07:57.280"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input rack}</arg>
</arguments>
<assign>
<var>${temp rack 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:57.280" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Rack 001')]</msg>
<status status="PASS" starttime="20200109 17:07:57.280" endtime="20200109 17:07:57.280"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:57.296" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.280" endtime="20200109 17:07:57.296"></status>
</kw>
<msg timestamp="20200109 17:07:57.296" level="INFO">${temp rack 2} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.280" endtime="20200109 17:07:57.296"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input panel}</arg>
</arguments>
<assign>
<var>${temp panel 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:57.296" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Panel 06')]</msg>
<status status="PASS" starttime="20200109 17:07:57.296" endtime="20200109 17:07:57.296"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:57.312" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.296" endtime="20200109 17:07:57.312"></status>
</kw>
<msg timestamp="20200109 17:07:57.312" level="INFO">${temp panel 2} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.296" endtime="20200109 17:07:57.312"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input port}</arg>
</arguments>
<assign>
<var>${temp port 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:57.312" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Port 02')]</msg>
<status status="PASS" starttime="20200109 17:07:57.312" endtime="20200109 17:07:57.312"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:57.327" level="INFO">${result} = 0</msg>
<status status="PASS" starttime="20200109 17:07:57.312" endtime="20200109 17:07:57.327"></status>
</kw>
<msg timestamp="20200109 17:07:57.327" level="INFO">${temp port 2} = 0</msg>
<status status="PASS" starttime="20200109 17:07:57.312" endtime="20200109 17:07:57.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${temp rack 1} == 1 and ${temp panel 1} == 1 and ${temp port 1} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${infor belong to left rectangle}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.327" endtime="20200109 17:07:57.327"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.327" endtime="20200109 17:07:57.327"></status>
</kw>
<msg timestamp="20200109 17:07:57.327" level="INFO">${infor belong to left rectangle} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.327" endtime="20200109 17:07:57.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${temp rack 2} == 1 and ${temp panel 2} == 1 and ${temp port 2} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${infor belong to right rectangle}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.327" endtime="20200109 17:07:57.327"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.327" endtime="20200109 17:07:57.327"></status>
</kw>
<msg timestamp="20200109 17:07:57.327" level="INFO">${infor belong to right rectangle} = 0</msg>
<status status="PASS" starttime="20200109 17:07:57.327" endtime="20200109 17:07:57.327"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${infor belong to left rectangle} == 1 or ${infor belong to right rectangle} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.343"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.343"></status>
</kw>
<msg timestamp="20200109 17:07:57.343" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.343"></status>
</kw>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<assign>
<var>${temp status}</var>
</assign>
<msg timestamp="20200109 17:07:57.343" level="INFO">${temp status} = appeared</msg>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.343"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp status}' == 'appeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>'${temp status}' == 'disappeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${expected value}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.343"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.343"></status>
</kw>
<msg timestamp="20200109 17:07:57.343" level="INFO">${expected value} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.343"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>Port information is not ${status}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>Port information is not ${status}</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.343"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.343"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.202" endtime="20200109 17:07:57.343"></status>
</kw>
<kw name="Then Check if Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; Port &quot;5&quot; &quot;appeared&quot; in Trace screen" library="TraceDefinitions">
<doc>This keyword is used to check the information of Copper panel displaying in the same information rectangle area</doc>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Rack</arg>
<arg>00</arg>
</arguments>
<assign>
<var>${temp rack}</var>
</assign>
<msg timestamp="20200109 17:07:57.343" level="INFO">${temp rack} = Rack 00</msg>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.343"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp rack}</arg>
<arg>${rackID}</arg>
</arguments>
<assign>
<var>${input rack}</var>
</assign>
<msg timestamp="20200109 17:07:57.343" level="INFO">${input rack} = Rack 001</msg>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.343"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Panel</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${temp panel}</var>
</assign>
<msg timestamp="20200109 17:07:57.343" level="INFO">${temp panel} = Panel 0</msg>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.343"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp panel}</arg>
<arg>${panelID}</arg>
</arguments>
<assign>
<var>${input panel}</var>
</assign>
<msg timestamp="20200109 17:07:57.343" level="INFO">${input panel} = Panel 06</msg>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.343"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Port</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${temp port}</var>
</assign>
<msg timestamp="20200109 17:07:57.343" level="INFO">${temp port} = Port 0</msg>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.343"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp port}</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${input port}</var>
</assign>
<msg timestamp="20200109 17:07:57.343" level="INFO">${input port} = Port 05</msg>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.343"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input rack}</arg>
</arguments>
<assign>
<var>${temp rack 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:57.359" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Rack 001')]</msg>
<status status="PASS" starttime="20200109 17:07:57.359" endtime="20200109 17:07:57.359"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:57.359" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.359" endtime="20200109 17:07:57.359"></status>
</kw>
<msg timestamp="20200109 17:07:57.359" level="INFO">${temp rack 1} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.359" endtime="20200109 17:07:57.359"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input panel}</arg>
</arguments>
<assign>
<var>${temp panel 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:57.359" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Panel 06')]</msg>
<status status="PASS" starttime="20200109 17:07:57.359" endtime="20200109 17:07:57.374"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:57.374" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.374" endtime="20200109 17:07:57.374"></status>
</kw>
<msg timestamp="20200109 17:07:57.374" level="INFO">${temp panel 1} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.359" endtime="20200109 17:07:57.374"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input port}</arg>
</arguments>
<assign>
<var>${temp port 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:57.374" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Port 05')]</msg>
<status status="PASS" starttime="20200109 17:07:57.374" endtime="20200109 17:07:57.374"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:57.390" level="INFO">${result} = 0</msg>
<status status="PASS" starttime="20200109 17:07:57.374" endtime="20200109 17:07:57.390"></status>
</kw>
<msg timestamp="20200109 17:07:57.390" level="INFO">${temp port 1} = 0</msg>
<status status="PASS" starttime="20200109 17:07:57.374" endtime="20200109 17:07:57.390"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input rack}</arg>
</arguments>
<assign>
<var>${temp rack 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:57.405" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Rack 001')]</msg>
<status status="PASS" starttime="20200109 17:07:57.405" endtime="20200109 17:07:57.405"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:57.405" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.405" endtime="20200109 17:07:57.405"></status>
</kw>
<msg timestamp="20200109 17:07:57.405" level="INFO">${temp rack 2} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.405" endtime="20200109 17:07:57.405"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input panel}</arg>
</arguments>
<assign>
<var>${temp panel 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:57.405" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Panel 06')]</msg>
<status status="PASS" starttime="20200109 17:07:57.405" endtime="20200109 17:07:57.405"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:57.421" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.421" endtime="20200109 17:07:57.421"></status>
</kw>
<msg timestamp="20200109 17:07:57.421" level="INFO">${temp panel 2} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.405" endtime="20200109 17:07:57.421"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input port}</arg>
</arguments>
<assign>
<var>${temp port 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:57.421" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Port 05')]</msg>
<status status="PASS" starttime="20200109 17:07:57.421" endtime="20200109 17:07:57.421"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:57.437" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.421" endtime="20200109 17:07:57.437"></status>
</kw>
<msg timestamp="20200109 17:07:57.437" level="INFO">${temp port 2} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.421" endtime="20200109 17:07:57.437"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${temp rack 1} == 1 and ${temp panel 1} == 1 and ${temp port 1} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${infor belong to left rectangle}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.452"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.452"></status>
</kw>
<msg timestamp="20200109 17:07:57.452" level="INFO">${infor belong to left rectangle} = 0</msg>
<status status="PASS" starttime="20200109 17:07:57.437" endtime="20200109 17:07:57.452"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${temp rack 2} == 1 and ${temp panel 2} == 1 and ${temp port 2} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${infor belong to right rectangle}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.452"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.452"></status>
</kw>
<msg timestamp="20200109 17:07:57.452" level="INFO">${infor belong to right rectangle} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.452"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${infor belong to left rectangle} == 1 or ${infor belong to right rectangle} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.452"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.452"></status>
</kw>
<msg timestamp="20200109 17:07:57.452" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.452"></status>
</kw>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<assign>
<var>${temp status}</var>
</assign>
<msg timestamp="20200109 17:07:57.452" level="INFO">${temp status} = appeared</msg>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.452"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp status}' == 'appeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>'${temp status}' == 'disappeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${expected value}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.452"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.452"></status>
</kw>
<msg timestamp="20200109 17:07:57.452" level="INFO">${expected value} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.452"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>Port information is not ${status}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>Port information is not ${status}</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.452"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.452"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.343" endtime="20200109 17:07:57.452"></status>
</kw>
<kw name="Then Check if the &quot;full&quot; of &quot;LC&quot; Patching Bar &quot;appeared&quot; in Trace screen" library="TraceDefinitions">
<doc>This keyword is used to check the portion of patching bar of Copper/ LC panel appeared/ disappeared in Trace screen</doc>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${portion}</arg>
</arguments>
<assign>
<var>${temp portion}</var>
</assign>
<msg timestamp="20200109 17:07:57.452" level="INFO">${temp portion} = full</msg>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.452"></status>
</kw>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${panel type}</arg>
</arguments>
<assign>
<var>${temp panel type}</var>
</assign>
<msg timestamp="20200109 17:07:57.468" level="INFO">${temp panel type} = lc</msg>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.468"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp portion}' == 'full' and '${temp panel type}' == 'copper'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>${barFullCopper}</arg>
<arg>ELSE IF</arg>
<arg>'${temp portion}' == 'haft' and '${temp panel type}' == 'copper'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>${barHaftCopper}</arg>
</arguments>
<assign>
<var>${replace panel type}</var>
</assign>
<msg timestamp="20200109 17:07:57.468" level="INFO">${replace panel type} = None</msg>
<status status="PASS" starttime="20200109 17:07:57.468" endtime="20200109 17:07:57.468"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${dynamic patching bar}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:57.468" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.468" endtime="20200109 17:07:57.468"></status>
</kw>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<assign>
<var>${temp status}</var>
</assign>
<msg timestamp="20200109 17:07:57.468" level="INFO">${temp status} = appeared</msg>
<status status="PASS" starttime="20200109 17:07:57.468" endtime="20200109 17:07:57.468"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp status}' == 'appeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>'${temp status}' == 'disappeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${expected value}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:57.484"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:57.484"></status>
</kw>
<msg timestamp="20200109 17:07:57.484" level="INFO">${expected value} = 1</msg>
<status status="PASS" starttime="20200109 17:07:57.468" endtime="20200109 17:07:57.484"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>The patching bar is not ${status}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>The patching bar is not ${status}</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:57.484"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:57.484"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.452" endtime="20200109 17:07:57.484"></status>
</kw>
<kw name="And Press 24F port at Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; ModuleHD &quot;A&quot; Port &quot;3&quot; with keymode &quot;short&quot;" library="VirtualPanelDefinitions">
<doc>This keyword is used to press on a specific Copper port regarding to type of keymode</doc>
<kw name="Get 24F Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
<arg>${moduleHD}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200109 17:07:57.484" level="INFO">Length is 12</msg>
<msg timestamp="20200109 17:07:57.484" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:57.484"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${input module}' == 'A' or '${input module}' == 'a' or '${input module}' == 'B' or '${input module}' == 'b'</arg>
<arg>Set Variable</arg>
<arg>AB</arg>
<arg>ELSE IF</arg>
<arg>'${input module}' == 'C' or '${input module}' == 'c' or '${input module}' == 'D' or '${input module}' == 'd'</arg>
<arg>Set Variable</arg>
<arg>CD</arg>
</arguments>
<assign>
<var>${temp module}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AB</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:57.484"></status>
</kw>
<msg timestamp="20200109 17:07:57.484" level="INFO">${temp module} = AB</msg>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:57.484"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:57.484"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:57.484"></status>
</kw>
<kw name="${panel index} = 1" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:57.484"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:57.484"></status>
</kw>
<kw name="${panel index} = 2" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:57.499"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:57.499"></status>
</kw>
<kw name="${panel index} = 3" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.499" endtime="20200109 17:07:57.499"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.499" endtime="20200109 17:07:57.499"></status>
</kw>
<kw name="${panel index} = 4" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.499" endtime="20200109 17:07:57.499"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.499" endtime="20200109 17:07:57.499"></status>
</kw>
<kw name="${panel index} = 5" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.499" endtime="20200109 17:07:57.499"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.499" endtime="20200109 17:07:57.499"></status>
</kw>
<kw name="${panel index} = 6" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.499" endtime="20200109 17:07:57.499"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.499" endtime="20200109 17:07:57.499"></status>
</kw>
<kw name="${panel index} = 7" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.499" endtime="20200109 17:07:57.515"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.499" endtime="20200109 17:07:57.515"></status>
</kw>
<kw name="${panel index} = 8" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:57.515" endtime="20200109 17:07:57.515"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.515" endtime="20200109 17:07:57.515"></status>
</kw>
<kw name="${panel index} = 9" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200109 17:07:57.515" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200109 17:07:57.515" endtime="20200109 17:07:57.515"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.515" endtime="20200109 17:07:57.515"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.515" endtime="20200109 17:07:57.515"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:57.515"></status>
</kw>
<msg timestamp="20200109 17:07:57.515" level="INFO">${panel index} = 10</msg>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:57.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200109 17:07:57.515" level="INFO">10</msg>
<status status="PASS" starttime="20200109 17:07:57.515" endtime="20200109 17:07:57.515"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --press --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--module</arg>
<arg>${moduleHD}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
<arg>--keymode</arg>
<arg>${keyMode}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200109 17:07:57.515" level="INFO">${completed command} = vp_cmd_helper --press --rack 1 --panel 10 --module A --port 3 --keymode short</msg>
<status status="PASS" starttime="20200109 17:07:57.515" endtime="20200109 17:07:57.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200109 17:07:57.515" level="INFO">vp_cmd_helper --press --rack 1 --panel 10 --module A --port 3 --keymode short</msg>
<status status="PASS" starttime="20200109 17:07:57.515" endtime="20200109 17:07:57.515"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200109 17:07:57.609" level="INFO">vp_cmd_helper --press --rack 1 --panel 10 --module A --port 3 --keymode short</msg>
<status status="PASS" starttime="20200109 17:07:57.515" endtime="20200109 17:07:57.609"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200109 17:07:59.619" level="INFO">${stdout} = result=success
command=press
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:07:57.609" endtime="20200109 17:07:59.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200109 17:07:59.619" level="INFO">result=success
command=press
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:07:59.619" endtime="20200109 17:07:59.619"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.515" endtime="20200109 17:07:59.619"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:57.484" endtime="20200109 17:07:59.619"></status>
</kw>
<kw name="Then Check if Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; Port &quot;3&quot; &quot;appeared&quot; in Trace screen" library="TraceDefinitions">
<doc>This keyword is used to check the information of Copper panel displaying in the same information rectangle area</doc>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Rack</arg>
<arg>00</arg>
</arguments>
<assign>
<var>${temp rack}</var>
</assign>
<msg timestamp="20200109 17:07:59.619" level="INFO">${temp rack} = Rack 00</msg>
<status status="PASS" starttime="20200109 17:07:59.619" endtime="20200109 17:07:59.619"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp rack}</arg>
<arg>${rackID}</arg>
</arguments>
<assign>
<var>${input rack}</var>
</assign>
<msg timestamp="20200109 17:07:59.619" level="INFO">${input rack} = Rack 001</msg>
<status status="PASS" starttime="20200109 17:07:59.619" endtime="20200109 17:07:59.619"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Panel</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${temp panel}</var>
</assign>
<msg timestamp="20200109 17:07:59.619" level="INFO">${temp panel} = Panel 0</msg>
<status status="PASS" starttime="20200109 17:07:59.619" endtime="20200109 17:07:59.619"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp panel}</arg>
<arg>${panelID}</arg>
</arguments>
<assign>
<var>${input panel}</var>
</assign>
<msg timestamp="20200109 17:07:59.619" level="INFO">${input panel} = Panel 06</msg>
<status status="PASS" starttime="20200109 17:07:59.619" endtime="20200109 17:07:59.619"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Port</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${temp port}</var>
</assign>
<msg timestamp="20200109 17:07:59.634" level="INFO">${temp port} = Port 0</msg>
<status status="PASS" starttime="20200109 17:07:59.619" endtime="20200109 17:07:59.634"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp port}</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${input port}</var>
</assign>
<msg timestamp="20200109 17:07:59.634" level="INFO">${input port} = Port 03</msg>
<status status="PASS" starttime="20200109 17:07:59.634" endtime="20200109 17:07:59.634"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input rack}</arg>
</arguments>
<assign>
<var>${temp rack 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:59.634" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Rack 001')]</msg>
<status status="PASS" starttime="20200109 17:07:59.634" endtime="20200109 17:07:59.634"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:59.666" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.634" endtime="20200109 17:07:59.666"></status>
</kw>
<msg timestamp="20200109 17:07:59.666" level="INFO">${temp rack 1} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.634" endtime="20200109 17:07:59.666"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input panel}</arg>
</arguments>
<assign>
<var>${temp panel 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:59.666" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Panel 06')]</msg>
<status status="PASS" starttime="20200109 17:07:59.666" endtime="20200109 17:07:59.666"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:59.681" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.666" endtime="20200109 17:07:59.681"></status>
</kw>
<msg timestamp="20200109 17:07:59.681" level="INFO">${temp panel 1} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.666" endtime="20200109 17:07:59.681"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input port}</arg>
</arguments>
<assign>
<var>${temp port 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:59.681" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Port 03')]</msg>
<status status="PASS" starttime="20200109 17:07:59.681" endtime="20200109 17:07:59.681"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:59.697" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.681" endtime="20200109 17:07:59.697"></status>
</kw>
<msg timestamp="20200109 17:07:59.697" level="INFO">${temp port 1} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.681" endtime="20200109 17:07:59.697"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input rack}</arg>
</arguments>
<assign>
<var>${temp rack 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:59.697" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Rack 001')]</msg>
<status status="PASS" starttime="20200109 17:07:59.697" endtime="20200109 17:07:59.697"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:59.712" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.697" endtime="20200109 17:07:59.712"></status>
</kw>
<msg timestamp="20200109 17:07:59.712" level="INFO">${temp rack 2} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.697" endtime="20200109 17:07:59.712"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input panel}</arg>
</arguments>
<assign>
<var>${temp panel 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:59.712" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Panel 06')]</msg>
<status status="PASS" starttime="20200109 17:07:59.712" endtime="20200109 17:07:59.712"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:59.728" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.712" endtime="20200109 17:07:59.728"></status>
</kw>
<msg timestamp="20200109 17:07:59.728" level="INFO">${temp panel 2} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.712" endtime="20200109 17:07:59.728"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input port}</arg>
</arguments>
<assign>
<var>${temp port 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:59.728" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Port 03')]</msg>
<status status="PASS" starttime="20200109 17:07:59.728" endtime="20200109 17:07:59.728"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:59.744" level="INFO">${result} = 0</msg>
<status status="PASS" starttime="20200109 17:07:59.728" endtime="20200109 17:07:59.744"></status>
</kw>
<msg timestamp="20200109 17:07:59.744" level="INFO">${temp port 2} = 0</msg>
<status status="PASS" starttime="20200109 17:07:59.728" endtime="20200109 17:07:59.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${temp rack 1} == 1 and ${temp panel 1} == 1 and ${temp port 1} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${infor belong to left rectangle}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.744" endtime="20200109 17:07:59.744"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.744" endtime="20200109 17:07:59.744"></status>
</kw>
<msg timestamp="20200109 17:07:59.744" level="INFO">${infor belong to left rectangle} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.744" endtime="20200109 17:07:59.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${temp rack 2} == 1 and ${temp panel 2} == 1 and ${temp port 2} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${infor belong to right rectangle}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.744" endtime="20200109 17:07:59.744"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.744" endtime="20200109 17:07:59.744"></status>
</kw>
<msg timestamp="20200109 17:07:59.744" level="INFO">${infor belong to right rectangle} = 0</msg>
<status status="PASS" starttime="20200109 17:07:59.744" endtime="20200109 17:07:59.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${infor belong to left rectangle} == 1 or ${infor belong to right rectangle} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.744" endtime="20200109 17:07:59.744"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.744" endtime="20200109 17:07:59.744"></status>
</kw>
<msg timestamp="20200109 17:07:59.744" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.744" endtime="20200109 17:07:59.744"></status>
</kw>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<assign>
<var>${temp status}</var>
</assign>
<msg timestamp="20200109 17:07:59.744" level="INFO">${temp status} = appeared</msg>
<status status="PASS" starttime="20200109 17:07:59.744" endtime="20200109 17:07:59.744"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp status}' == 'appeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>'${temp status}' == 'disappeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${expected value}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.744" endtime="20200109 17:07:59.759"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.744" endtime="20200109 17:07:59.759"></status>
</kw>
<msg timestamp="20200109 17:07:59.759" level="INFO">${expected value} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.744" endtime="20200109 17:07:59.759"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>Port information is not ${status}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>Port information is not ${status}</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.759" endtime="20200109 17:07:59.759"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.759" endtime="20200109 17:07:59.759"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.619" endtime="20200109 17:07:59.759"></status>
</kw>
<kw name="Then Check if Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; Port &quot;6&quot; &quot;appeared&quot; in Trace screen" library="TraceDefinitions">
<doc>This keyword is used to check the information of Copper panel displaying in the same information rectangle area</doc>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Rack</arg>
<arg>00</arg>
</arguments>
<assign>
<var>${temp rack}</var>
</assign>
<msg timestamp="20200109 17:07:59.759" level="INFO">${temp rack} = Rack 00</msg>
<status status="PASS" starttime="20200109 17:07:59.759" endtime="20200109 17:07:59.759"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp rack}</arg>
<arg>${rackID}</arg>
</arguments>
<assign>
<var>${input rack}</var>
</assign>
<msg timestamp="20200109 17:07:59.759" level="INFO">${input rack} = Rack 001</msg>
<status status="PASS" starttime="20200109 17:07:59.759" endtime="20200109 17:07:59.759"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Panel</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${temp panel}</var>
</assign>
<msg timestamp="20200109 17:07:59.759" level="INFO">${temp panel} = Panel 0</msg>
<status status="PASS" starttime="20200109 17:07:59.759" endtime="20200109 17:07:59.759"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp panel}</arg>
<arg>${panelID}</arg>
</arguments>
<assign>
<var>${input panel}</var>
</assign>
<msg timestamp="20200109 17:07:59.759" level="INFO">${input panel} = Panel 06</msg>
<status status="PASS" starttime="20200109 17:07:59.759" endtime="20200109 17:07:59.759"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>Port</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${temp port}</var>
</assign>
<msg timestamp="20200109 17:07:59.759" level="INFO">${temp port} = Port 0</msg>
<status status="PASS" starttime="20200109 17:07:59.759" endtime="20200109 17:07:59.759"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${temp port}</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${input port}</var>
</assign>
<msg timestamp="20200109 17:07:59.759" level="INFO">${input port} = Port 06</msg>
<status status="PASS" starttime="20200109 17:07:59.759" endtime="20200109 17:07:59.759"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input rack}</arg>
</arguments>
<assign>
<var>${temp rack 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:59.759" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Rack 001')]</msg>
<status status="PASS" starttime="20200109 17:07:59.759" endtime="20200109 17:07:59.759"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:59.785" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.759" endtime="20200109 17:07:59.785"></status>
</kw>
<msg timestamp="20200109 17:07:59.786" level="INFO">${temp rack 1} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.759" endtime="20200109 17:07:59.786"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input panel}</arg>
</arguments>
<assign>
<var>${temp panel 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:59.788" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Panel 06')]</msg>
<status status="PASS" starttime="20200109 17:07:59.787" endtime="20200109 17:07:59.788"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:59.802" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.788" endtime="20200109 17:07:59.802"></status>
</kw>
<msg timestamp="20200109 17:07:59.803" level="INFO">${temp panel 1} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.786" endtime="20200109 17:07:59.803"></status>
</kw>
<kw name="Is Information Belong to Left Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input port}</arg>
</arguments>
<assign>
<var>${temp port 1}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on left rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:59.805" level="INFO">${xPath syntax} = //div[@id='row-left-center' and contains(@style,'visible')]/div[contains(text(),'Port 06')]</msg>
<status status="PASS" starttime="20200109 17:07:59.805" endtime="20200109 17:07:59.805"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:59.820" level="INFO">${result} = 0</msg>
<status status="PASS" starttime="20200109 17:07:59.805" endtime="20200109 17:07:59.820"></status>
</kw>
<msg timestamp="20200109 17:07:59.820" level="INFO">${temp port 1} = 0</msg>
<status status="PASS" starttime="20200109 17:07:59.804" endtime="20200109 17:07:59.820"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input rack}</arg>
</arguments>
<assign>
<var>${temp rack 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:59.820" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Rack 001')]</msg>
<status status="PASS" starttime="20200109 17:07:59.820" endtime="20200109 17:07:59.820"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:59.820" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.820" endtime="20200109 17:07:59.820"></status>
</kw>
<msg timestamp="20200109 17:07:59.836" level="INFO">${temp rack 2} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.820" endtime="20200109 17:07:59.836"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input panel}</arg>
</arguments>
<assign>
<var>${temp panel 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:59.836" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Panel 06')]</msg>
<status status="PASS" starttime="20200109 17:07:59.836" endtime="20200109 17:07:59.836"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:59.836" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.836" endtime="20200109 17:07:59.836"></status>
</kw>
<msg timestamp="20200109 17:07:59.836" level="INFO">${temp panel 2} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.836" endtime="20200109 17:07:59.836"></status>
</kw>
<kw name="Is Information Belong to Right Rectangle Area" library="TraceDefinitions">
<arguments>
<arg>${input port}</arg>
</arguments>
<assign>
<var>${temp port 2}</var>
</assign>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${dynamic trace port position on right rectangle}</arg>
<arg>port information</arg>
<arg>${infor}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200109 17:07:59.836" level="INFO">${xPath syntax} = //div[@id='row-right-center' and contains(@style,'visible')]/div[contains(text(),'Port 06')]</msg>
<status status="PASS" starttime="20200109 17:07:59.836" endtime="20200109 17:07:59.852"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:59.867" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.852" endtime="20200109 17:07:59.867"></status>
</kw>
<msg timestamp="20200109 17:07:59.867" level="INFO">${temp port 2} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.836" endtime="20200109 17:07:59.867"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${temp rack 1} == 1 and ${temp panel 1} == 1 and ${temp port 1} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${infor belong to left rectangle}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.867" endtime="20200109 17:07:59.867"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.867" endtime="20200109 17:07:59.867"></status>
</kw>
<msg timestamp="20200109 17:07:59.867" level="INFO">${infor belong to left rectangle} = 0</msg>
<status status="PASS" starttime="20200109 17:07:59.867" endtime="20200109 17:07:59.867"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${temp rack 2} == 1 and ${temp panel 2} == 1 and ${temp port 2} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${infor belong to right rectangle}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.867" endtime="20200109 17:07:59.867"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.867" endtime="20200109 17:07:59.867"></status>
</kw>
<msg timestamp="20200109 17:07:59.867" level="INFO">${infor belong to right rectangle} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.867" endtime="20200109 17:07:59.867"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${infor belong to left rectangle} == 1 or ${infor belong to right rectangle} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.883" endtime="20200109 17:07:59.883"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.867" endtime="20200109 17:07:59.883"></status>
</kw>
<msg timestamp="20200109 17:07:59.883" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.867" endtime="20200109 17:07:59.883"></status>
</kw>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<assign>
<var>${temp status}</var>
</assign>
<msg timestamp="20200109 17:07:59.883" level="INFO">${temp status} = appeared</msg>
<status status="PASS" starttime="20200109 17:07:59.883" endtime="20200109 17:07:59.883"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp status}' == 'appeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>'${temp status}' == 'disappeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${expected value}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.883" endtime="20200109 17:07:59.883"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.883" endtime="20200109 17:07:59.883"></status>
</kw>
<msg timestamp="20200109 17:07:59.883" level="INFO">${expected value} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.883" endtime="20200109 17:07:59.883"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>Port information is not ${status}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>Port information is not ${status}</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.883" endtime="20200109 17:07:59.883"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.883" endtime="20200109 17:07:59.883"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.759" endtime="20200109 17:07:59.883"></status>
</kw>
<kw name="Then Check if the &quot;full&quot; of &quot;LC&quot; Patching Bar &quot;appeared&quot; in Trace screen" library="TraceDefinitions">
<doc>This keyword is used to check the portion of patching bar of Copper/ LC panel appeared/ disappeared in Trace screen</doc>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${portion}</arg>
</arguments>
<assign>
<var>${temp portion}</var>
</assign>
<msg timestamp="20200109 17:07:59.883" level="INFO">${temp portion} = full</msg>
<status status="PASS" starttime="20200109 17:07:59.883" endtime="20200109 17:07:59.883"></status>
</kw>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${panel type}</arg>
</arguments>
<assign>
<var>${temp panel type}</var>
</assign>
<msg timestamp="20200109 17:07:59.883" level="INFO">${temp panel type} = lc</msg>
<status status="PASS" starttime="20200109 17:07:59.883" endtime="20200109 17:07:59.883"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp portion}' == 'full' and '${temp panel type}' == 'copper'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>${barFullCopper}</arg>
<arg>ELSE IF</arg>
<arg>'${temp portion}' == 'haft' and '${temp panel type}' == 'copper'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>${barHaftCopper}</arg>
</arguments>
<assign>
<var>${replace panel type}</var>
</assign>
<msg timestamp="20200109 17:07:59.899" level="INFO">${replace panel type} = None</msg>
<status status="PASS" starttime="20200109 17:07:59.899" endtime="20200109 17:07:59.899"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${dynamic patching bar}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200109 17:07:59.899" level="INFO">${result} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.899" endtime="20200109 17:07:59.899"></status>
</kw>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<assign>
<var>${temp status}</var>
</assign>
<msg timestamp="20200109 17:07:59.914" level="INFO">${temp status} = appeared</msg>
<status status="PASS" starttime="20200109 17:07:59.899" endtime="20200109 17:07:59.914"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp status}' == 'appeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>'${temp status}' == 'disappeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${expected value}</var>
</assign>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Set Variable</arg>
<arg>1</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.914" endtime="20200109 17:07:59.914"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.914" endtime="20200109 17:07:59.914"></status>
</kw>
<msg timestamp="20200109 17:07:59.914" level="INFO">${expected value} = 1</msg>
<status status="PASS" starttime="20200109 17:07:59.914" endtime="20200109 17:07:59.914"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>The patching bar is not ${status}</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>'${result}'</arg>
<arg>'${expected value}'</arg>
<arg>The patching bar is not ${status}</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.914" endtime="20200109 17:07:59.914"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.914" endtime="20200109 17:07:59.914"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.883" endtime="20200109 17:07:59.914"></status>
</kw>
<kw name="And Plugout 24F Tip to Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; Module &quot;A&quot; Port &quot;1&quot;" library="VirtualPanelDefinitions">
<kw name="Get 24F Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
<arg>${module}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200109 17:07:59.914" level="INFO">Length is 12</msg>
<msg timestamp="20200109 17:07:59.914" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200109 17:07:59.914" endtime="20200109 17:07:59.914"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${input module}' == 'A' or '${input module}' == 'a' or '${input module}' == 'B' or '${input module}' == 'b'</arg>
<arg>Set Variable</arg>
<arg>AB</arg>
<arg>ELSE IF</arg>
<arg>'${input module}' == 'C' or '${input module}' == 'c' or '${input module}' == 'D' or '${input module}' == 'd'</arg>
<arg>Set Variable</arg>
<arg>CD</arg>
</arguments>
<assign>
<var>${temp module}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AB</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.914" endtime="20200109 17:07:59.914"></status>
</kw>
<msg timestamp="20200109 17:07:59.914" level="INFO">${temp module} = AB</msg>
<status status="PASS" starttime="20200109 17:07:59.914" endtime="20200109 17:07:59.914"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.930" endtime="20200109 17:07:59.930"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.914" endtime="20200109 17:07:59.930"></status>
</kw>
<kw name="${panel index} = 1" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.930" endtime="20200109 17:07:59.930"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.930" endtime="20200109 17:07:59.930"></status>
</kw>
<kw name="${panel index} = 2" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.930" endtime="20200109 17:07:59.930"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.930" endtime="20200109 17:07:59.930"></status>
</kw>
<kw name="${panel index} = 3" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.930" endtime="20200109 17:07:59.930"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.930" endtime="20200109 17:07:59.945"></status>
</kw>
<kw name="${panel index} = 4" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.945" endtime="20200109 17:07:59.945"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.945" endtime="20200109 17:07:59.945"></status>
</kw>
<kw name="${panel index} = 5" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.945" endtime="20200109 17:07:59.945"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.945" endtime="20200109 17:07:59.945"></status>
</kw>
<kw name="${panel index} = 6" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.945" endtime="20200109 17:07:59.945"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.945" endtime="20200109 17:07:59.945"></status>
</kw>
<kw name="${panel index} = 7" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.945" endtime="20200109 17:07:59.961"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.945" endtime="20200109 17:07:59.961"></status>
</kw>
<kw name="${panel index} = 8" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:07:59.961" endtime="20200109 17:07:59.961"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.961" endtime="20200109 17:07:59.961"></status>
</kw>
<kw name="${panel index} = 9" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200109 17:07:59.961" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200109 17:07:59.961" endtime="20200109 17:07:59.961"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.961" endtime="20200109 17:07:59.961"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.961" endtime="20200109 17:07:59.961"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.914" endtime="20200109 17:07:59.961"></status>
</kw>
<msg timestamp="20200109 17:07:59.961" level="INFO">${panel index} = 10</msg>
<status status="PASS" starttime="20200109 17:07:59.914" endtime="20200109 17:07:59.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200109 17:07:59.977" level="INFO">10</msg>
<status status="PASS" starttime="20200109 17:07:59.977" endtime="20200109 17:07:59.977"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --plugout --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--module</arg>
<arg>${module}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200109 17:07:59.977" level="INFO">${completed command} = vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 1</msg>
<status status="PASS" starttime="20200109 17:07:59.977" endtime="20200109 17:07:59.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200109 17:07:59.977" level="INFO">vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 1</msg>
<status status="PASS" starttime="20200109 17:07:59.977" endtime="20200109 17:07:59.977"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200109 17:08:00.070" level="INFO">vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 1</msg>
<status status="PASS" starttime="20200109 17:07:59.977" endtime="20200109 17:08:00.070"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200109 17:08:02.071" level="INFO">${stdout} = result=success
command=plugout
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:08:00.070" endtime="20200109 17:08:02.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200109 17:08:02.074" level="INFO">result=success
command=plugout
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:08:02.073" endtime="20200109 17:08:02.075"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.977" endtime="20200109 17:08:02.075"></status>
</kw>
<status status="PASS" starttime="20200109 17:07:59.914" endtime="20200109 17:08:02.076"></status>
</kw>
<kw name="And Plugout 24F Tip to Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; Module &quot;A&quot; Port &quot;4&quot;" library="VirtualPanelDefinitions">
<kw name="Get 24F Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
<arg>${module}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200109 17:08:02.081" level="INFO">Length is 12</msg>
<msg timestamp="20200109 17:08:02.081" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200109 17:08:02.079" endtime="20200109 17:08:02.082"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${input module}' == 'A' or '${input module}' == 'a' or '${input module}' == 'B' or '${input module}' == 'b'</arg>
<arg>Set Variable</arg>
<arg>AB</arg>
<arg>ELSE IF</arg>
<arg>'${input module}' == 'C' or '${input module}' == 'c' or '${input module}' == 'D' or '${input module}' == 'd'</arg>
<arg>Set Variable</arg>
<arg>CD</arg>
</arguments>
<assign>
<var>${temp module}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AB</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:02.085" endtime="20200109 17:08:02.086"></status>
</kw>
<msg timestamp="20200109 17:08:02.086" level="INFO">${temp module} = AB</msg>
<status status="PASS" starttime="20200109 17:08:02.083" endtime="20200109 17:08:02.086"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:02.088" endtime="20200109 17:08:02.092"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:02.088" endtime="20200109 17:08:02.093"></status>
</kw>
<kw name="${panel index} = 1" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:02.094" endtime="20200109 17:08:02.098"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:02.093" endtime="20200109 17:08:02.099"></status>
</kw>
<kw name="${panel index} = 2" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:02.100" endtime="20200109 17:08:02.104"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:02.099" endtime="20200109 17:08:02.105"></status>
</kw>
<kw name="${panel index} = 3" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:02.106" endtime="20200109 17:08:02.111"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:02.105" endtime="20200109 17:08:02.112"></status>
</kw>
<kw name="${panel index} = 4" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:02.113" endtime="20200109 17:08:02.116"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:02.112" endtime="20200109 17:08:02.117"></status>
</kw>
<kw name="${panel index} = 5" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:02.118" endtime="20200109 17:08:02.121"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:02.117" endtime="20200109 17:08:02.122"></status>
</kw>
<kw name="${panel index} = 6" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:02.123" endtime="20200109 17:08:02.127"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:02.122" endtime="20200109 17:08:02.127"></status>
</kw>
<kw name="${panel index} = 7" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:02.128" endtime="20200109 17:08:02.132"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:02.128" endtime="20200109 17:08:02.132"></status>
</kw>
<kw name="${panel index} = 8" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:02.133" endtime="20200109 17:08:02.135"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:02.133" endtime="20200109 17:08:02.136"></status>
</kw>
<kw name="${panel index} = 9" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200109 17:08:02.139" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200109 17:08:02.139" endtime="20200109 17:08:02.140"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:02.137" endtime="20200109 17:08:02.140"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:02.136" endtime="20200109 17:08:02.140"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:02.087" endtime="20200109 17:08:02.140"></status>
</kw>
<msg timestamp="20200109 17:08:02.141" level="INFO">${panel index} = 10</msg>
<status status="PASS" starttime="20200109 17:08:02.078" endtime="20200109 17:08:02.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200109 17:08:02.143" level="INFO">10</msg>
<status status="PASS" starttime="20200109 17:08:02.142" endtime="20200109 17:08:02.143"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --plugout --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--module</arg>
<arg>${module}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200109 17:08:02.144" level="INFO">${completed command} = vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 4</msg>
<status status="PASS" starttime="20200109 17:08:02.143" endtime="20200109 17:08:02.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200109 17:08:02.145" level="INFO">vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 4</msg>
<status status="PASS" starttime="20200109 17:08:02.145" endtime="20200109 17:08:02.145"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200109 17:08:02.172" level="INFO">vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 4</msg>
<status status="PASS" starttime="20200109 17:08:02.147" endtime="20200109 17:08:02.173"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200109 17:08:04.175" level="INFO">${stdout} = result=success
command=plugout
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:08:02.173" endtime="20200109 17:08:04.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200109 17:08:04.178" level="INFO">result=success
command=plugout
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:08:04.177" endtime="20200109 17:08:04.178"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:02.146" endtime="20200109 17:08:04.179"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:02.077" endtime="20200109 17:08:04.180"></status>
</kw>
<kw name="And Plugout 24F Tip to Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; Module &quot;A&quot; Port &quot;2&quot;" library="VirtualPanelDefinitions">
<kw name="Get 24F Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
<arg>${module}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200109 17:08:04.185" level="INFO">Length is 12</msg>
<msg timestamp="20200109 17:08:04.186" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200109 17:08:04.184" endtime="20200109 17:08:04.186"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${input module}' == 'A' or '${input module}' == 'a' or '${input module}' == 'B' or '${input module}' == 'b'</arg>
<arg>Set Variable</arg>
<arg>AB</arg>
<arg>ELSE IF</arg>
<arg>'${input module}' == 'C' or '${input module}' == 'c' or '${input module}' == 'D' or '${input module}' == 'd'</arg>
<arg>Set Variable</arg>
<arg>CD</arg>
</arguments>
<assign>
<var>${temp module}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AB</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:04.189" endtime="20200109 17:08:04.189"></status>
</kw>
<msg timestamp="20200109 17:08:04.190" level="INFO">${temp module} = AB</msg>
<status status="PASS" starttime="20200109 17:08:04.187" endtime="20200109 17:08:04.190"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:04.192" endtime="20200109 17:08:04.196"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:04.191" endtime="20200109 17:08:04.197"></status>
</kw>
<kw name="${panel index} = 1" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:04.199" endtime="20200109 17:08:04.203"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:04.198" endtime="20200109 17:08:04.203"></status>
</kw>
<kw name="${panel index} = 2" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:04.204" endtime="20200109 17:08:04.208"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:04.204" endtime="20200109 17:08:04.209"></status>
</kw>
<kw name="${panel index} = 3" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:04.210" endtime="20200109 17:08:04.213"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:04.209" endtime="20200109 17:08:04.213"></status>
</kw>
<kw name="${panel index} = 4" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:04.214" endtime="20200109 17:08:04.217"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:04.214" endtime="20200109 17:08:04.217"></status>
</kw>
<kw name="${panel index} = 5" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:04.218" endtime="20200109 17:08:04.220"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:04.217" endtime="20200109 17:08:04.220"></status>
</kw>
<kw name="${panel index} = 6" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:04.221" endtime="20200109 17:08:04.223"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:04.220" endtime="20200109 17:08:04.223"></status>
</kw>
<kw name="${panel index} = 7" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:04.224" endtime="20200109 17:08:04.226"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:04.223" endtime="20200109 17:08:04.226"></status>
</kw>
<kw name="${panel index} = 8" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:04.226" endtime="20200109 17:08:04.228"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:04.226" endtime="20200109 17:08:04.229"></status>
</kw>
<kw name="${panel index} = 9" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200109 17:08:04.233" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200109 17:08:04.232" endtime="20200109 17:08:04.233"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:04.229" endtime="20200109 17:08:04.233"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:04.229" endtime="20200109 17:08:04.233"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:04.191" endtime="20200109 17:08:04.234"></status>
</kw>
<msg timestamp="20200109 17:08:04.234" level="INFO">${panel index} = 10</msg>
<status status="PASS" starttime="20200109 17:08:04.183" endtime="20200109 17:08:04.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200109 17:08:04.235" level="INFO">10</msg>
<status status="PASS" starttime="20200109 17:08:04.235" endtime="20200109 17:08:04.236"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --plugout --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--module</arg>
<arg>${module}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200109 17:08:04.236" level="INFO">${completed command} = vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 2</msg>
<status status="PASS" starttime="20200109 17:08:04.236" endtime="20200109 17:08:04.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200109 17:08:04.237" level="INFO">vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 2</msg>
<status status="PASS" starttime="20200109 17:08:04.237" endtime="20200109 17:08:04.238"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200109 17:08:04.253" level="INFO">vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 2</msg>
<status status="PASS" starttime="20200109 17:08:04.239" endtime="20200109 17:08:04.254"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200109 17:08:06.256" level="INFO">${stdout} = result=success
command=plugout
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:08:04.254" endtime="20200109 17:08:06.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200109 17:08:06.259" level="INFO">result=success
command=plugout
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:08:06.258" endtime="20200109 17:08:06.260"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:04.238" endtime="20200109 17:08:06.260"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:04.182" endtime="20200109 17:08:06.261"></status>
</kw>
<kw name="And Plugout 24F Tip to Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; Module &quot;A&quot; Port &quot;5&quot;" library="VirtualPanelDefinitions">
<kw name="Get 24F Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
<arg>${module}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200109 17:08:06.266" level="INFO">Length is 12</msg>
<msg timestamp="20200109 17:08:06.267" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200109 17:08:06.266" endtime="20200109 17:08:06.267"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${input module}' == 'A' or '${input module}' == 'a' or '${input module}' == 'B' or '${input module}' == 'b'</arg>
<arg>Set Variable</arg>
<arg>AB</arg>
<arg>ELSE IF</arg>
<arg>'${input module}' == 'C' or '${input module}' == 'c' or '${input module}' == 'D' or '${input module}' == 'd'</arg>
<arg>Set Variable</arg>
<arg>CD</arg>
</arguments>
<assign>
<var>${temp module}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AB</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:06.270" endtime="20200109 17:08:06.271"></status>
</kw>
<msg timestamp="20200109 17:08:06.271" level="INFO">${temp module} = AB</msg>
<status status="PASS" starttime="20200109 17:08:06.268" endtime="20200109 17:08:06.271"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:06.273" endtime="20200109 17:08:06.277"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:06.273" endtime="20200109 17:08:06.278"></status>
</kw>
<kw name="${panel index} = 1" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:06.279" endtime="20200109 17:08:06.283"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:06.278" endtime="20200109 17:08:06.284"></status>
</kw>
<kw name="${panel index} = 2" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:06.284" endtime="20200109 17:08:06.286"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:06.284" endtime="20200109 17:08:06.287"></status>
</kw>
<kw name="${panel index} = 3" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:06.287" endtime="20200109 17:08:06.289"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:06.287" endtime="20200109 17:08:06.290"></status>
</kw>
<kw name="${panel index} = 4" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:06.290" endtime="20200109 17:08:06.292"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:06.290" endtime="20200109 17:08:06.293"></status>
</kw>
<kw name="${panel index} = 5" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:06.293" endtime="20200109 17:08:06.296"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:06.293" endtime="20200109 17:08:06.296"></status>
</kw>
<kw name="${panel index} = 6" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:06.297" endtime="20200109 17:08:06.300"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:06.297" endtime="20200109 17:08:06.300"></status>
</kw>
<kw name="${panel index} = 7" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:06.300" endtime="20200109 17:08:06.302"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:06.300" endtime="20200109 17:08:06.303"></status>
</kw>
<kw name="${panel index} = 8" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:06.303" endtime="20200109 17:08:06.305"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:06.303" endtime="20200109 17:08:06.306"></status>
</kw>
<kw name="${panel index} = 9" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200109 17:08:06.309" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200109 17:08:06.308" endtime="20200109 17:08:06.309"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:06.306" endtime="20200109 17:08:06.309"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:06.306" endtime="20200109 17:08:06.310"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:06.272" endtime="20200109 17:08:06.310"></status>
</kw>
<msg timestamp="20200109 17:08:06.310" level="INFO">${panel index} = 10</msg>
<status status="PASS" starttime="20200109 17:08:06.264" endtime="20200109 17:08:06.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200109 17:08:06.311" level="INFO">10</msg>
<status status="PASS" starttime="20200109 17:08:06.311" endtime="20200109 17:08:06.312"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --plugout --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--module</arg>
<arg>${module}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200109 17:08:06.313" level="INFO">${completed command} = vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 5</msg>
<status status="PASS" starttime="20200109 17:08:06.312" endtime="20200109 17:08:06.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200109 17:08:06.315" level="INFO">vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 5</msg>
<status status="PASS" starttime="20200109 17:08:06.314" endtime="20200109 17:08:06.315"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200109 17:08:06.335" level="INFO">vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 5</msg>
<status status="PASS" starttime="20200109 17:08:06.316" endtime="20200109 17:08:06.336"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200109 17:08:08.337" level="INFO">${stdout} = result=success
command=plugout
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:08:06.336" endtime="20200109 17:08:08.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200109 17:08:08.340" level="INFO">result=success
command=plugout
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:08:08.339" endtime="20200109 17:08:08.341"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:06.315" endtime="20200109 17:08:08.342"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:06.262" endtime="20200109 17:08:08.342"></status>
</kw>
<kw name="And Plugout 24F Tip to Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; Module &quot;A&quot; Port &quot;3&quot;" library="VirtualPanelDefinitions">
<kw name="Get 24F Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
<arg>${module}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200109 17:08:08.348" level="INFO">Length is 12</msg>
<msg timestamp="20200109 17:08:08.348" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200109 17:08:08.347" endtime="20200109 17:08:08.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${input module}' == 'A' or '${input module}' == 'a' or '${input module}' == 'B' or '${input module}' == 'b'</arg>
<arg>Set Variable</arg>
<arg>AB</arg>
<arg>ELSE IF</arg>
<arg>'${input module}' == 'C' or '${input module}' == 'c' or '${input module}' == 'D' or '${input module}' == 'd'</arg>
<arg>Set Variable</arg>
<arg>CD</arg>
</arguments>
<assign>
<var>${temp module}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AB</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:08.351" endtime="20200109 17:08:08.352"></status>
</kw>
<msg timestamp="20200109 17:08:08.353" level="INFO">${temp module} = AB</msg>
<status status="PASS" starttime="20200109 17:08:08.350" endtime="20200109 17:08:08.353"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:08.355" endtime="20200109 17:08:08.359"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:08.354" endtime="20200109 17:08:08.359"></status>
</kw>
<kw name="${panel index} = 1" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:08.360" endtime="20200109 17:08:08.365"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:08.360" endtime="20200109 17:08:08.365"></status>
</kw>
<kw name="${panel index} = 2" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:08.367" endtime="20200109 17:08:08.371"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:08.366" endtime="20200109 17:08:08.371"></status>
</kw>
<kw name="${panel index} = 3" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:08.373" endtime="20200109 17:08:08.376"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:08.372" endtime="20200109 17:08:08.377"></status>
</kw>
<kw name="${panel index} = 4" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:08.379" endtime="20200109 17:08:08.383"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:08.377" endtime="20200109 17:08:08.383"></status>
</kw>
<kw name="${panel index} = 5" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:08.384" endtime="20200109 17:08:08.386"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:08.383" endtime="20200109 17:08:08.386"></status>
</kw>
<kw name="${panel index} = 6" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:08.387" endtime="20200109 17:08:08.389"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:08.386" endtime="20200109 17:08:08.389"></status>
</kw>
<kw name="${panel index} = 7" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:08.389" endtime="20200109 17:08:08.391"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:08.389" endtime="20200109 17:08:08.392"></status>
</kw>
<kw name="${panel index} = 8" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:08.392" endtime="20200109 17:08:08.394"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:08.392" endtime="20200109 17:08:08.395"></status>
</kw>
<kw name="${panel index} = 9" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200109 17:08:08.399" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200109 17:08:08.398" endtime="20200109 17:08:08.399"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:08.396" endtime="20200109 17:08:08.399"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:08.395" endtime="20200109 17:08:08.400"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:08.353" endtime="20200109 17:08:08.400"></status>
</kw>
<msg timestamp="20200109 17:08:08.400" level="INFO">${panel index} = 10</msg>
<status status="PASS" starttime="20200109 17:08:08.345" endtime="20200109 17:08:08.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200109 17:08:08.401" level="INFO">10</msg>
<status status="PASS" starttime="20200109 17:08:08.401" endtime="20200109 17:08:08.402"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --plugout --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--module</arg>
<arg>${module}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200109 17:08:08.403" level="INFO">${completed command} = vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 3</msg>
<status status="PASS" starttime="20200109 17:08:08.402" endtime="20200109 17:08:08.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200109 17:08:08.404" level="INFO">vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 3</msg>
<status status="PASS" starttime="20200109 17:08:08.403" endtime="20200109 17:08:08.404"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200109 17:08:08.415" level="INFO">vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 3</msg>
<status status="PASS" starttime="20200109 17:08:08.405" endtime="20200109 17:08:08.416"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200109 17:08:10.418" level="INFO">${stdout} = result=success
command=plugout
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:08:08.416" endtime="20200109 17:08:10.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200109 17:08:10.421" level="INFO">result=success
command=plugout
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:08:10.420" endtime="20200109 17:08:10.422"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:08.404" endtime="20200109 17:08:10.423"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:08.343" endtime="20200109 17:08:10.423"></status>
</kw>
<kw name="And Plugout 24F Tip to Rack &quot;1&quot; Panel &quot;6&quot; Row &quot;1&quot; Module &quot;A&quot; Port &quot;6&quot;" library="VirtualPanelDefinitions">
<kw name="Get 24F Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
<arg>${module}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200109 17:08:10.428" level="INFO">Length is 12</msg>
<msg timestamp="20200109 17:08:10.429" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200109 17:08:10.427" endtime="20200109 17:08:10.429"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${input module}' == 'A' or '${input module}' == 'a' or '${input module}' == 'B' or '${input module}' == 'b'</arg>
<arg>Set Variable</arg>
<arg>AB</arg>
<arg>ELSE IF</arg>
<arg>'${input module}' == 'C' or '${input module}' == 'c' or '${input module}' == 'D' or '${input module}' == 'd'</arg>
<arg>Set Variable</arg>
<arg>CD</arg>
</arguments>
<assign>
<var>${temp module}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>AB</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:10.432" endtime="20200109 17:08:10.433"></status>
</kw>
<msg timestamp="20200109 17:08:10.434" level="INFO">${temp module} = AB</msg>
<status status="PASS" starttime="20200109 17:08:10.430" endtime="20200109 17:08:10.434"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:10.436" endtime="20200109 17:08:10.440"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:10.435" endtime="20200109 17:08:10.440"></status>
</kw>
<kw name="${panel index} = 1" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:10.441" endtime="20200109 17:08:10.445"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:10.441" endtime="20200109 17:08:10.446"></status>
</kw>
<kw name="${panel index} = 2" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:10.448" endtime="20200109 17:08:10.452"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:10.447" endtime="20200109 17:08:10.452"></status>
</kw>
<kw name="${panel index} = 3" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:10.453" endtime="20200109 17:08:10.455"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:10.453" endtime="20200109 17:08:10.455"></status>
</kw>
<kw name="${panel index} = 4" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:10.456" endtime="20200109 17:08:10.458"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:10.456" endtime="20200109 17:08:10.459"></status>
</kw>
<kw name="${panel index} = 5" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:10.459" endtime="20200109 17:08:10.462"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:10.459" endtime="20200109 17:08:10.463"></status>
</kw>
<kw name="${panel index} = 6" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:10.463" endtime="20200109 17:08:10.466"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:10.463" endtime="20200109 17:08:10.466"></status>
</kw>
<kw name="${panel index} = 7" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:10.466" endtime="20200109 17:08:10.468"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:10.466" endtime="20200109 17:08:10.469"></status>
</kw>
<kw name="${panel index} = 8" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<status status="PASS" starttime="20200109 17:08:10.469" endtime="20200109 17:08:10.471"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:10.469" endtime="20200109 17:08:10.472"></status>
</kw>
<kw name="${panel index} = 9" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[24F]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[module]]}' == '${temp module}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200109 17:08:10.475" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200109 17:08:10.474" endtime="20200109 17:08:10.475"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:10.472" endtime="20200109 17:08:10.475"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:10.472" endtime="20200109 17:08:10.475"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:10.434" endtime="20200109 17:08:10.476"></status>
</kw>
<msg timestamp="20200109 17:08:10.476" level="INFO">${panel index} = 10</msg>
<status status="PASS" starttime="20200109 17:08:10.426" endtime="20200109 17:08:10.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200109 17:08:10.478" level="INFO">10</msg>
<status status="PASS" starttime="20200109 17:08:10.477" endtime="20200109 17:08:10.478"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --plugout --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--module</arg>
<arg>${module}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200109 17:08:10.480" level="INFO">${completed command} = vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 6</msg>
<status status="PASS" starttime="20200109 17:08:10.479" endtime="20200109 17:08:10.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200109 17:08:10.481" level="INFO">vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 6</msg>
<status status="PASS" starttime="20200109 17:08:10.480" endtime="20200109 17:08:10.481"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200109 17:08:10.515" level="INFO">vp_cmd_helper --plugout --rack 1 --panel 10 --module A --port 6</msg>
<status status="PASS" starttime="20200109 17:08:10.482" endtime="20200109 17:08:10.516"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200109 17:08:12.518" level="INFO">${stdout} = result=success
command=plugout
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:08:10.516" endtime="20200109 17:08:12.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200109 17:08:12.521" level="INFO">result=success
command=plugout
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=10
type=96lc
panel_state=RUN
modulekit=AB
serial=36FFFF200001
count=11
# </msg>
<status status="PASS" starttime="20200109 17:08:12.520" endtime="20200109 17:08:12.522"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:10.481" endtime="20200109 17:08:12.523"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:10.425" endtime="20200109 17:08:12.524"></status>
</kw>
<kw name="Set Web UI to Stand By State and Close Current Browser" library="GeneralPage" type="teardown">
<kw name="Wait For Page Update" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE UPDATE TIMEOUT}</arg>
</arguments>
<msg timestamp="20200109 17:08:12.629" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20200109 17:08:12.527" endtime="20200109 17:08:12.630"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:12.526" endtime="20200109 17:08:12.631"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${btnExit}</arg>
</arguments>
<assign>
<var>${count Exit button}</var>
</assign>
<msg timestamp="20200109 17:08:12.684" level="INFO">${count Exit button} = 1</msg>
<status status="PASS" starttime="20200109 17:08:12.632" endtime="20200109 17:08:12.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count Exit button} &gt; 0</arg>
<arg>Exit Screen</arg>
</arguments>
<kw name="Exit Screen" library="GeneralPage">
<kw name="Click Web Button" library="GeneralPage">
<arguments>
<arg>${btnExit}</arg>
</arguments>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<assign>
<var>${button exist}</var>
</assign>
<msg timestamp="20200109 17:08:12.697" level="INFO">${button exist} = 1</msg>
<status status="PASS" starttime="20200109 17:08:12.686" endtime="20200109 17:08:12.698"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${button exist} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<msg timestamp="20200109 17:08:12.700" level="INFO">Clicking element '//div[@id='exit-footer' and @style='display: block;']/div[@id='exit-button']'.</msg>
<status status="PASS" starttime="20200109 17:08:12.700" endtime="20200109 17:08:12.758"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200109 17:08:13.760" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200109 17:08:12.760" endtime="20200109 17:08:13.761"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:12.759" endtime="20200109 17:08:13.761"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:12.700" endtime="20200109 17:08:13.762"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:12.699" endtime="20200109 17:08:13.762"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:12.698" endtime="20200109 17:08:13.763"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:12.686" endtime="20200109 17:08:13.764"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200109 17:08:14.767" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200109 17:08:13.766" endtime="20200109 17:08:14.767"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:13.764" endtime="20200109 17:08:14.768"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:12.685" endtime="20200109 17:08:14.769"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:12.685" endtime="20200109 17:08:14.769"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${lblimVisionX}</arg>
</arguments>
<assign>
<var>${count Home screen}</var>
</assign>
<msg timestamp="20200109 17:08:14.798" level="INFO">${count Home screen} = 1</msg>
<status status="PASS" starttime="20200109 17:08:14.770" endtime="20200109 17:08:14.799"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count Home screen} &gt; 0</arg>
<arg>Run Keywords</arg>
<arg>Click Web Button</arg>
<arg>${btnHome}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Click Web Button</arg>
<arg>${btnHome}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Click Web Button" library="GeneralPage">
<arguments>
<arg>${btnHome}</arg>
</arguments>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<assign>
<var>${button exist}</var>
</assign>
<msg timestamp="20200109 17:08:14.821" level="INFO">${button exist} = 1</msg>
<status status="PASS" starttime="20200109 17:08:14.803" endtime="20200109 17:08:14.822"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${button exist} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<msg timestamp="20200109 17:08:14.825" level="INFO">Clicking element '//div[@id='home-lang']'.</msg>
<status status="PASS" starttime="20200109 17:08:14.824" endtime="20200109 17:08:14.885"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200109 17:08:15.890" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200109 17:08:14.888" endtime="20200109 17:08:15.891"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:14.886" endtime="20200109 17:08:15.892"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:14.824" endtime="20200109 17:08:15.893"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:14.823" endtime="20200109 17:08:15.893"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:14.822" endtime="20200109 17:08:15.894"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:14.802" endtime="20200109 17:08:15.895"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200109 17:08:16.898" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200109 17:08:15.897" endtime="20200109 17:08:16.898"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:15.896" endtime="20200109 17:08:16.899"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:14.801" endtime="20200109 17:08:16.900"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:14.800" endtime="20200109 17:08:16.900"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200109 17:08:16.901" endtime="20200109 17:08:19.130"></status>
</kw>
<status status="PASS" starttime="20200109 17:08:12.525" endtime="20200109 17:08:19.130"></status>
</kw>
<status status="PASS" starttime="20200109 17:02:23.216" endtime="20200109 17:08:19.130" critical="yes"></status>
</test>
<status status="PASS" starttime="20200109 17:02:22.732" endtime="20200109 17:08:19.134"></status>
</suite>
<status status="PASS" starttime="20200109 17:02:22.716" endtime="20200109 17:08:19.135"></status>
</suite>
<status status="PASS" starttime="20200109 17:02:22.716" endtime="20200109 17:08:19.135"></status>
</suite>
<status status="PASS" starttime="20200109 17:02:22.716" endtime="20200109 17:08:19.135"></status>
</suite>
<status status="PASS" starttime="20200109 17:02:22.701" endtime="20200109 17:08:19.151"></status>
</suite>
<status status="PASS" starttime="20200109 17:02:22.685" endtime="20200109 17:08:19.151"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="BulkPatching Robot">BulkPatching Robot</stat>
<stat pass="1" fail="0" id="s1-s1" name="BulkPatching Robot">BulkPatching Robot.BulkPatching Robot</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Test Resources">BulkPatching Robot.BulkPatching Robot.Test Resources</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1" name="Test Suites">BulkPatching Robot.BulkPatching Robot.Test Resources.Test Suites</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1-s1" name="4.Exit Bulk Patchings Screen">BulkPatching Robot.BulkPatching Robot.Test Resources.Test Suites.4.Exit Bulk Patchings Screen</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1-s1-s1" name="4.4.2.CheckAllPatchesOnBulkPatchingListArePatchedSuccessfullyAfterWaitingForTimeout">BulkPatching Robot.BulkPatching Robot.Test Resources.Test Suites.4.Exit Bulk Patchings Screen.4.4.2.CheckAllPatchesOnBulkPatchingListArePatchedSuccessfullyAfterWaitingForTimeout</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
