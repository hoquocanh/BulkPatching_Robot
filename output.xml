<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.8.0 on win32)" generated="20200115 15:55:36.686" rpa="false">
<suite id="s1" name="BulkPatching Robot" source="C:\Users\quocanh.ho\git\BulkPatching_Robot">
<suite id="s1-s1" name="BulkPatching Robot" source="C:\Users\quocanh.ho\git\BulkPatching_Robot\BulkPatching_Robot">
<suite id="s1-s1-s1" name="Test Resources" source="C:\Users\quocanh.ho\git\BulkPatching_Robot\BulkPatching_Robot\Test_Resources">
<suite id="s1-s1-s1-s1" name="Test Suites" source="C:\Users\quocanh.ho\git\BulkPatching_Robot\BulkPatching_Robot\Test_Resources\Test_Suites">
<suite id="s1-s1-s1-s1-s1" name="5.Create Equipment" source="C:\Users\quocanh.ho\git\BulkPatching_Robot\BulkPatching_Robot\Test_Resources\Test_Suites\5.Create_Equipment">
<suite id="s1-s1-s1-s1-s1-s1" name="5.2.CheckEquipmentInTranslation" source="C:\Users\quocanh.ho\git\BulkPatching_Robot\BulkPatching_Robot\Test_Resources\Test_Suites\5.Create_Equipment\5.2.CheckEquipmentInTranslation.robot">
<test id="s1-s1-s1-s1-s1-s1-t1" name="Create_Equip-02_01_Verify that &quot;Equipment&quot; should use the same translation as the text in the &quot;Equipment&quot; button if changing to Danish">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Open SSH Connection and Login</arg>
<arg>Open WebUI And Go To Home Screen</arg>
</arguments>
<kw name="Open SSH Connection and Login" library="SSHDefinitions">
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given ``host`` and ``port``.</doc>
<arguments>
<arg>${HOST_A}</arg>
</arguments>
<status status="PASS" starttime="20200115 15:55:37.440" endtime="20200115 15:55:37.440"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given ``username`` and ``password``.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20200115 15:55:37.440" level="INFO">Logging into '192.168.171.201:22' as 'root'.</msg>
<msg timestamp="20200115 15:55:38.847" level="INFO">Read output: #</msg>
<status status="PASS" starttime="20200115 15:55:37.440" endtime="20200115 15:55:38.847"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:37.440" endtime="20200115 15:55:38.847"></status>
</kw>
<kw name="Open WebUI And Go To Home Screen" library="GeneralPage">
<tags>
<tag>host_A</tag>
<tag>host_B</tag>
</tags>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>http://</arg>
<arg>${HOST A}</arg>
<arg>:8888</arg>
</arguments>
<assign>
<var>${WebUI url}</var>
</assign>
<msg timestamp="20200115 15:55:38.847" level="INFO">${WebUI url} = http://192.168.171.201:8888</msg>
<status status="PASS" starttime="20200115 15:55:38.847" endtime="20200115 15:55:38.847"></status>
</kw>
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${WebUI url}</arg>
<arg>${BROWSER}</arg>
</arguments>
<msg timestamp="20200115 15:55:38.847" level="INFO">Opening browser 'Chrome' to base url 'http://192.168.171.201:8888'.</msg>
<status status="PASS" starttime="20200115 15:55:38.847" endtime="20200115 15:55:42.853"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200115 15:55:42.854" endtime="20200115 15:55:43.982"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:55:44.984" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:55:43.983" endtime="20200115 15:55:44.984"></status>
</kw>
<kw name="Set Web UI to Stand By State" library="GeneralPage">
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${btnExit}</arg>
</arguments>
<assign>
<var>${count Exit button}</var>
</assign>
<msg timestamp="20200115 15:55:45.010" level="INFO">${count Exit button} = 0</msg>
<status status="PASS" starttime="20200115 15:55:44.986" endtime="20200115 15:55:45.011"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count Exit button} &gt; 0</arg>
<arg>Exit Screen</arg>
</arguments>
<status status="PASS" starttime="20200115 15:55:45.012" endtime="20200115 15:55:45.012"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${btnCancel}</arg>
</arguments>
<assign>
<var>${count Cancel button}</var>
</assign>
<msg timestamp="20200115 15:55:45.039" level="INFO">${count Cancel button} = 0</msg>
<status status="PASS" starttime="20200115 15:55:45.013" endtime="20200115 15:55:45.039"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count Cancel button} &gt; 0</arg>
<arg>Exit Screen</arg>
</arguments>
<status status="PASS" starttime="20200115 15:55:45.040" endtime="20200115 15:55:45.041"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${lblimVisionX}</arg>
</arguments>
<assign>
<var>${count Home screen}</var>
</assign>
<msg timestamp="20200115 15:55:45.061" level="INFO">${count Home screen} = 0</msg>
<status status="PASS" starttime="20200115 15:55:45.042" endtime="20200115 15:55:45.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count Home screen} &gt; 0</arg>
<arg>Run Keywords</arg>
<arg>Click Web Button</arg>
<arg>${btnHome}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<status status="PASS" starttime="20200115 15:55:45.062" endtime="20200115 15:55:45.063"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:44.985" endtime="20200115 15:55:45.063"></status>
</kw>
<kw name="Go To Home Screen" library="GeneralPage">
<kw name="Click Web Button" library="GeneralPage">
<arguments>
<arg>${btnHome}</arg>
</arguments>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<assign>
<var>${button exist}</var>
</assign>
<msg timestamp="20200115 15:55:45.084" level="INFO">${button exist} = 1</msg>
<status status="PASS" starttime="20200115 15:55:45.065" endtime="20200115 15:55:45.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${button exist} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<msg timestamp="20200115 15:55:45.089" level="INFO">Clicking element '//div[@id='home-lang']'.</msg>
<status status="PASS" starttime="20200115 15:55:45.088" endtime="20200115 15:55:45.214"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:55:46.219" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:55:45.217" endtime="20200115 15:55:46.219"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:45.215" endtime="20200115 15:55:46.220"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:45.087" endtime="20200115 15:55:46.220"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:45.086" endtime="20200115 15:55:46.220"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:45.085" endtime="20200115 15:55:46.221"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:45.064" endtime="20200115 15:55:46.221"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:45.064" endtime="20200115 15:55:46.221"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:38.847" endtime="20200115 15:55:46.222"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:37.440" endtime="20200115 15:55:46.222"></status>
</kw>
<kw name="Given Go To Select Language &quot;danish&quot;" library="SelectLanguageDefinitions">
<kw name="Select Language &quot;${language}&quot;" library="SelectLanguagePage">
<kw name="Go To Settings Screen" library="HomePage">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnSettings}</arg>
</arguments>
<msg timestamp="20200115 15:55:46.225" level="INFO">Clicking element '//div[@id='settings']/div/input[@type='submit']'.</msg>
<status status="PASS" starttime="20200115 15:55:46.225" endtime="20200115 15:55:46.377"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:55:47.381" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:55:46.380" endtime="20200115 15:55:47.381"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:46.378" endtime="20200115 15:55:47.382"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:46.224" endtime="20200115 15:55:47.383"></status>
</kw>
<kw name="Go To Select Language Screen" library="SettingsPage">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnLanguage Settings}</arg>
</arguments>
<msg timestamp="20200115 15:55:47.385" level="INFO">Clicking element '//div[@id='settings-language']'.</msg>
<status status="PASS" starttime="20200115 15:55:47.384" endtime="20200115 15:55:47.960"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:55:48.963" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:55:47.962" endtime="20200115 15:55:48.963"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:47.960" endtime="20200115 15:55:48.964"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:47.383" endtime="20200115 15:55:48.964"></status>
</kw>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${language}</arg>
</arguments>
<assign>
<var>${temp language}</var>
</assign>
<msg timestamp="20200115 15:55:48.966" level="INFO">${temp language} = danish</msg>
<status status="PASS" starttime="20200115 15:55:48.965" endtime="20200115 15:55:48.967"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp language}' == 'danish'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnDanish}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'german'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnGerman}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'english'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnEnglish}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'spainish'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnSpainish}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'french'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnFrench}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'italian'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnItalian}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'polish'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnPolish}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'portuguese'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnPortuguese}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'russian'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnRussian}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'chinese'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnChinese}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'korean'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnKorean}</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Log</arg>
<arg>${temp language}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Click Element</arg>
<arg>${btnDanish}</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnDanish}</arg>
</arguments>
<msg timestamp="20200115 15:55:48.972" level="INFO">Clicking element '//div[@id='language-list']/div[@id='1005']'.</msg>
<status status="PASS" starttime="20200115 15:55:48.972" endtime="20200115 15:55:49.062"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:48.970" endtime="20200115 15:55:49.063"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:48.968" endtime="20200115 15:55:49.064"></status>
</kw>
<kw name="Touch Save Language" library="SelectLanguagePage">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnSave}</arg>
</arguments>
<msg timestamp="20200115 15:55:49.066" level="INFO">Clicking element '//div[@id='save-button']'.</msg>
<status status="PASS" starttime="20200115 15:55:49.066" endtime="20200115 15:55:49.151"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:55:50.156" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:55:49.154" endtime="20200115 15:55:50.156"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:49.152" endtime="20200115 15:55:50.157"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:49.065" endtime="20200115 15:55:50.157"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:46.223" endtime="20200115 15:55:50.158"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:46.223" endtime="20200115 15:55:50.159"></status>
</kw>
<kw name="Given Go To Home Screen" library="GeneralPage">
<kw name="Click Web Button" library="GeneralPage">
<arguments>
<arg>${btnHome}</arg>
</arguments>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<assign>
<var>${button exist}</var>
</assign>
<msg timestamp="20200115 15:55:50.176" level="INFO">${button exist} = 1</msg>
<status status="PASS" starttime="20200115 15:55:50.162" endtime="20200115 15:55:50.176"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${button exist} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<msg timestamp="20200115 15:55:50.181" level="INFO">Clicking element '//div[@id='home-lang']'.</msg>
<status status="PASS" starttime="20200115 15:55:50.181" endtime="20200115 15:55:50.279"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:55:51.284" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:55:50.282" endtime="20200115 15:55:51.284"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:50.280" endtime="20200115 15:55:51.285"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:50.180" endtime="20200115 15:55:51.285"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:50.178" endtime="20200115 15:55:51.286"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:50.177" endtime="20200115 15:55:51.286"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:50.161" endtime="20200115 15:55:51.287"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:50.160" endtime="20200115 15:55:51.287"></status>
</kw>
<kw name="Given Go To Bulk Patching Screen" library="HomePage">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnBulk Patching}</arg>
</arguments>
<msg timestamp="20200115 15:55:51.290" level="INFO">Clicking element '//input[@id='bulk-patch-btn']'.</msg>
<status status="PASS" starttime="20200115 15:55:51.289" endtime="20200115 15:55:51.373"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:55:52.377" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:55:51.375" endtime="20200115 15:55:52.377"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:51.374" endtime="20200115 15:55:52.378"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:51.288" endtime="20200115 15:55:52.378"></status>
</kw>
<kw name="When Plugin Copper Tip to Rack &quot;1&quot; Panel &quot;1&quot; Row &quot;1&quot; Port &quot;1&quot;" library="VirtualPanelDefinitions">
<kw name="Get Copper Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200115 15:55:52.383" level="INFO">Length is 12</msg>
<msg timestamp="20200115 15:55:52.384" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200115 15:55:52.383" endtime="20200115 15:55:52.385"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[COPPER]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200115 15:55:52.392" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200115 15:55:52.391" endtime="20200115 15:55:52.392"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:52.387" endtime="20200115 15:55:52.393"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:52.386" endtime="20200115 15:55:52.393"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:52.385" endtime="20200115 15:55:52.394"></status>
</kw>
<msg timestamp="20200115 15:55:52.395" level="INFO">${panel index} = 1</msg>
<status status="PASS" starttime="20200115 15:55:52.381" endtime="20200115 15:55:52.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200115 15:55:52.397" level="INFO">1</msg>
<status status="PASS" starttime="20200115 15:55:52.396" endtime="20200115 15:55:52.397"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --plugin --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200115 15:55:52.399" level="INFO">${completed command} = vp_cmd_helper --plugin --rack 1 --panel 1 --port 1</msg>
<status status="PASS" starttime="20200115 15:55:52.398" endtime="20200115 15:55:52.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200115 15:55:52.401" level="INFO">vp_cmd_helper --plugin --rack 1 --panel 1 --port 1</msg>
<status status="PASS" starttime="20200115 15:55:52.400" endtime="20200115 15:55:52.401"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200115 15:55:52.439" level="INFO">vp_cmd_helper --plugin --rack 1 --panel 1 --port 1</msg>
<status status="PASS" starttime="20200115 15:55:52.404" endtime="20200115 15:55:52.439"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200115 15:55:54.442" level="INFO">${stdout} = result=success
command=plugin
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=1
type=1100ps
panel_state=RUN
row=1
serial=28FFFF600001
count=11
# </msg>
<status status="PASS" starttime="20200115 15:55:52.440" endtime="20200115 15:55:54.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200115 15:55:54.445" level="INFO">result=success
command=plugin
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=1
type=1100ps
panel_state=RUN
row=1
serial=28FFFF600001
count=11
# </msg>
<status status="PASS" starttime="20200115 15:55:54.444" endtime="20200115 15:55:54.446"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:52.402" endtime="20200115 15:55:54.447"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:52.380" endtime="20200115 15:55:54.447"></status>
</kw>
<kw name="When Select Tab End &quot;B&quot;" library="BulkPatchingPage">
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${end position}</arg>
</arguments>
<assign>
<var>${temp end position}</var>
</assign>
<msg timestamp="20200115 15:55:54.451" level="INFO">${temp end position} = b</msg>
<status status="PASS" starttime="20200115 15:55:54.450" endtime="20200115 15:55:54.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp end position}' == 'a'</arg>
<arg>Click Web Button</arg>
<arg>${tabEndA}</arg>
<arg>ELSE IF</arg>
<arg>'${temp end position}' == 'b'</arg>
<arg>Click Web Button</arg>
<arg>${tabEndB}</arg>
</arguments>
<kw name="Click Web Button" library="GeneralPage">
<arguments>
<arg>${tabEndB}</arg>
</arguments>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<assign>
<var>${button exist}</var>
</assign>
<msg timestamp="20200115 15:55:54.485" level="INFO">${button exist} = 1</msg>
<status status="PASS" starttime="20200115 15:55:54.454" endtime="20200115 15:55:54.486"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${button exist} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<msg timestamp="20200115 15:55:54.491" level="INFO">Clicking element '//div[@id='btn-end-b']'.</msg>
<status status="PASS" starttime="20200115 15:55:54.490" endtime="20200115 15:55:54.550"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:55:55.553" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:55:54.552" endtime="20200115 15:55:55.553"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:54.551" endtime="20200115 15:55:55.554"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:54.489" endtime="20200115 15:55:55.554"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:54.488" endtime="20200115 15:55:55.554"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:54.487" endtime="20200115 15:55:55.555"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:54.453" endtime="20200115 15:55:55.555"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:54.452" endtime="20200115 15:55:55.556"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:55:56.558" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:55:55.557" endtime="20200115 15:55:56.558"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:55.556" endtime="20200115 15:55:56.559"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:54.448" endtime="20200115 15:55:56.559"></status>
</kw>
<kw name="Then Equipment Button Should Be &quot;appeared&quot;" library="BulkPatchingDefinitions">
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<assign>
<var>${temp status}</var>
</assign>
<msg timestamp="20200115 15:55:56.562" level="INFO">${temp status} = appeared</msg>
<status status="PASS" starttime="20200115 15:55:56.561" endtime="20200115 15:55:56.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp status}' == 'appeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Page Should Contain Element</arg>
<arg>${btnEquipment}</arg>
<arg>ELSE IF</arg>
<arg>'${temp status}' == 'disappeared'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Page Should Not Contain Element</arg>
<arg>${btnEquipment}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Page Should Contain Element</arg>
<arg>${btnEquipment}</arg>
</arguments>
<kw name="Page Should Contain Element" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<arguments>
<arg>${btnEquipment}</arg>
</arguments>
<msg timestamp="20200115 15:55:56.582" level="INFO">Current page contains element '//div[@id='btn-header' and contains(@style,'visibility: visible')]'.</msg>
<status status="PASS" starttime="20200115 15:55:56.565" endtime="20200115 15:55:56.583"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:56.564" endtime="20200115 15:55:56.583"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:56.563" endtime="20200115 15:55:56.583"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:56.560" endtime="20200115 15:55:56.584"></status>
</kw>
<kw name="When Touch Equipment Button" library="BulkPatchingPage">
<kw name="Click Web Button" library="GeneralPage">
<arguments>
<arg>${btnEquipment}</arg>
</arguments>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<assign>
<var>${button exist}</var>
</assign>
<msg timestamp="20200115 15:55:56.597" level="INFO">${button exist} = 1</msg>
<status status="PASS" starttime="20200115 15:55:56.586" endtime="20200115 15:55:56.598"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${button exist} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<msg timestamp="20200115 15:55:56.601" level="INFO">Clicking element '//div[@id='btn-header' and contains(@style,'visibility: visible')]'.</msg>
<status status="PASS" starttime="20200115 15:55:56.600" endtime="20200115 15:55:56.658"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:55:57.660" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:55:56.659" endtime="20200115 15:55:57.660"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:56.659" endtime="20200115 15:55:57.661"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:56.600" endtime="20200115 15:55:57.661"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:56.599" endtime="20200115 15:55:57.662"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:56.598" endtime="20200115 15:55:57.662"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:56.585" endtime="20200115 15:55:57.663"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:55:58.666" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:55:57.664" endtime="20200115 15:55:58.666"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:57.664" endtime="20200115 15:55:58.667"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:56.584" endtime="20200115 15:55:58.667"></status>
</kw>
<kw name="Then Check Equipment in List &quot;1&quot; &quot;appeared&quot;" library="BulkPatchingDefinitions">
<doc>This keyword is used to check the text"Equipment" displayed in End B list on Bulk Patching screen</doc>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>list</arg>
<arg>${listID}</arg>
</arguments>
<assign>
<var>${input list}</var>
</assign>
<msg timestamp="20200115 15:55:58.670" level="INFO">${input list} = list1</msg>
<status status="PASS" starttime="20200115 15:55:58.669" endtime="20200115 15:55:58.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${input list}</arg>
</arguments>
<msg timestamp="20200115 15:55:58.671" level="INFO">list1</msg>
<status status="PASS" starttime="20200115 15:55:58.670" endtime="20200115 15:55:58.671"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${txtList1_Equipment}</arg>
<arg>list1</arg>
<arg>${input list}</arg>
</arguments>
<assign>
<var>${xPath syntax}</var>
</assign>
<msg timestamp="20200115 15:55:58.673" level="INFO">${xPath syntax} = //li[@id='list1']/div/div/div[@style='float:left']</msg>
<status status="PASS" starttime="20200115 15:55:58.672" endtime="20200115 15:55:58.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<msg timestamp="20200115 15:55:58.674" level="INFO">//li[@id='list1']/div/div/div[@style='float:left']</msg>
<status status="PASS" starttime="20200115 15:55:58.673" endtime="20200115 15:55:58.674"></status>
</kw>
<kw name="Number of Lines in Bulk Patching Screen" library="BulkPatchingDefinitions">
<assign>
<var>${number of lines}</var>
</assign>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${number of lines}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20200115 15:55:58.692" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20200115 15:55:58.676" endtime="20200115 15:55:58.693"></status>
</kw>
<msg timestamp="20200115 15:55:58.693" level="INFO">${number of lines} = 1</msg>
<status status="PASS" starttime="20200115 15:55:58.675" endtime="20200115 15:55:58.693"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>0</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20200115 15:55:58.695" level="INFO">${count} = 0</msg>
<status status="PASS" starttime="20200115 15:55:58.694" endtime="20200115 15:55:58.695"></status>
</kw>
<kw name="${index} IN RANGE [ ${number of lines+1} ]" type="for">
<kw name="${index} = 0" type="foritem">
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${index} + 1</arg>
</arguments>
<assign>
<var>${index temp}</var>
</assign>
<msg timestamp="20200115 15:55:58.698" level="INFO">${index temp} = 1</msg>
<status status="PASS" starttime="20200115 15:55:58.697" endtime="20200115 15:55:58.698"></status>
</kw>
<kw name="Convert To String" library="BuiltIn">
<doc>Converts the given item to a Unicode string.</doc>
<arguments>
<arg>${index+1}</arg>
</arguments>
<assign>
<var>${index string}</var>
</assign>
<msg timestamp="20200115 15:55:58.699" level="INFO">${index string} = 1</msg>
<status status="PASS" starttime="20200115 15:55:58.699" endtime="20200115 15:55:58.700"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${xPath syntax}</arg>
</arguments>
<assign>
<var>${count}</var>
</assign>
<msg timestamp="20200115 15:55:58.719" level="INFO">${count} = 1</msg>
<status status="PASS" starttime="20200115 15:55:58.700" endtime="20200115 15:55:58.719"></status>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<doc>Stops executing the enclosing for loop if the ``condition`` is true.</doc>
<arguments>
<arg>${count} == 1</arg>
</arguments>
<msg timestamp="20200115 15:55:58.721" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200115 15:55:58.720" endtime="20200115 15:55:58.721"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:58.696" endtime="20200115 15:55:58.721"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:58.695" endtime="20200115 15:55:58.722"></status>
</kw>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${status}</arg>
</arguments>
<assign>
<var>${temp status}</var>
</assign>
<msg timestamp="20200115 15:55:58.723" level="INFO">${temp status} = appeared</msg>
<status status="PASS" starttime="20200115 15:55:58.722" endtime="20200115 15:55:58.723"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp status}' == 'appeared'</arg>
<arg>Set Variable</arg>
<arg>1</arg>
<arg>ELSE IF</arg>
<arg>'${temp status}' == 'disappeared'</arg>
<arg>Set Variable</arg>
<arg>0</arg>
</arguments>
<assign>
<var>${expected value}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<status status="PASS" starttime="20200115 15:55:58.725" endtime="20200115 15:55:58.725"></status>
</kw>
<msg timestamp="20200115 15:55:58.725" level="INFO">${expected value} = 1</msg>
<status status="PASS" starttime="20200115 15:55:58.724" endtime="20200115 15:55:58.726"></status>
</kw>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Should Be Equal</arg>
<arg>'${count}'</arg>
<arg>'${expected value}'</arg>
</arguments>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>'${count}'</arg>
<arg>'${expected value}'</arg>
</arguments>
<status status="PASS" starttime="20200115 15:55:58.727" endtime="20200115 15:55:58.728"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:58.727" endtime="20200115 15:55:58.729"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:58.668" endtime="20200115 15:55:58.729"></status>
</kw>
<kw name="And Plugout Copper Tip to Rack &quot;1&quot; Panel &quot;1&quot; Row &quot;1&quot; Port &quot;1&quot;" library="VirtualPanelDefinitions">
<kw name="Get Copper Panel Index" library="VirtualPanelDefinitions">
<arguments>
<arg>${rackID}</arg>
<arg>${panelID}</arg>
<arg>${row}</arg>
</arguments>
<assign>
<var>${panel index}</var>
</assign>
<kw name="Get Length" library="BuiltIn">
<doc>Returns and logs the length of the given item as an integer.</doc>
<arguments>
<arg>${VPpanels}</arg>
</arguments>
<assign>
<var>${panels number}</var>
</assign>
<msg timestamp="20200115 15:55:58.732" level="INFO">Length is 12</msg>
<msg timestamp="20200115 15:55:58.733" level="INFO">${panels number} = 12</msg>
<status status="PASS" starttime="20200115 15:55:58.732" endtime="20200115 15:55:58.733"></status>
</kw>
<kw name="${panel index} IN RANGE [ ${panels number-1} ]" type="for">
<kw name="${panel index} = 0" type="foritem">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${VPpanels[${panel index+1}][&amp;{dic panels table}[panel type]]}' == '${VIRTUAL PANELS TYPE}[COPPER]' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[rackID]]}' == '${input rackID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[panelID]]}' == '${input panelID}' and '${VPpanels[${panel index+1}][&amp;{dic panels table}[row]]}' == '${input row}'</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20200115 15:55:58.737" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20200115 15:55:58.737" endtime="20200115 15:55:58.738"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:58.735" endtime="20200115 15:55:58.738"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:58.734" endtime="20200115 15:55:58.739"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:58.733" endtime="20200115 15:55:58.739"></status>
</kw>
<msg timestamp="20200115 15:55:58.740" level="INFO">${panel index} = 1</msg>
<status status="PASS" starttime="20200115 15:55:58.731" endtime="20200115 15:55:58.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${panel index}</arg>
</arguments>
<msg timestamp="20200115 15:55:58.741" level="INFO">1</msg>
<status status="PASS" starttime="20200115 15:55:58.741" endtime="20200115 15:55:58.742"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>vp_cmd_helper --plugout --rack</arg>
<arg>${rackID}</arg>
<arg>--panel</arg>
<arg>${panel index}</arg>
<arg>--port</arg>
<arg>${portID}</arg>
</arguments>
<assign>
<var>${completed command}</var>
</assign>
<msg timestamp="20200115 15:55:58.743" level="INFO">${completed command} = vp_cmd_helper --plugout --rack 1 --panel 1 --port 1</msg>
<status status="PASS" starttime="20200115 15:55:58.742" endtime="20200115 15:55:58.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${completed command}</arg>
</arguments>
<msg timestamp="20200115 15:55:58.744" level="INFO">vp_cmd_helper --plugout --rack 1 --panel 1 --port 1</msg>
<status status="PASS" starttime="20200115 15:55:58.744" endtime="20200115 15:55:58.744"></status>
</kw>
<kw name="Enter Virtual Command ${completed command}" library="SSHDefinitions">
<kw name="Write" library="SSHLibrary">
<doc>Writes the given ``text`` on the remote machine and appends a newline.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<msg timestamp="20200115 15:55:58.775" level="INFO">vp_cmd_helper --plugout --rack 1 --panel 1 --port 1</msg>
<status status="PASS" starttime="20200115 15:55:58.746" endtime="20200115 15:55:58.776"></status>
</kw>
<kw name="Read" library="SSHLibrary">
<doc>Consumes and returns everything available on the server output.</doc>
<arguments>
<arg>loglevel=Trace</arg>
<arg>delay=1s</arg>
</arguments>
<assign>
<var>${stdout}</var>
</assign>
<msg timestamp="20200115 15:56:00.778" level="INFO">${stdout} = result=success
command=plugout
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=1
type=1100ps
panel_state=RUN
row=1
serial=28FFFF600001
count=11
# </msg>
<status status="PASS" starttime="20200115 15:55:58.776" endtime="20200115 15:56:00.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${stdout}</arg>
</arguments>
<msg timestamp="20200115 15:56:00.780" level="INFO">result=success
command=plugout
test_setup=on
bus_connect=on
bus_power=on
rack=1
panel=1
type=1100ps
panel_state=RUN
row=1
serial=28FFFF600001
count=11
# </msg>
<status status="PASS" starttime="20200115 15:56:00.779" endtime="20200115 15:56:00.781"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:58.745" endtime="20200115 15:56:00.781"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:58.730" endtime="20200115 15:56:00.782"></status>
</kw>
<kw name="And Exit Screen" library="GeneralPage">
<kw name="Click Web Button" library="GeneralPage">
<arguments>
<arg>${btnExit}</arg>
</arguments>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<assign>
<var>${button exist}</var>
</assign>
<msg timestamp="20200115 15:56:00.797" level="INFO">${button exist} = 1</msg>
<status status="PASS" starttime="20200115 15:56:00.784" endtime="20200115 15:56:00.797"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${button exist} == 1</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Run Keywords</arg>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Run Keywords" library="BuiltIn">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>Click Element</arg>
<arg>${btnName}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnName}</arg>
</arguments>
<msg timestamp="20200115 15:56:00.800" level="INFO">Clicking element '//div[@id='exit-footer' and @style='display: block;']/div[@id='exit-button']'.</msg>
<status status="PASS" starttime="20200115 15:56:00.800" endtime="20200115 15:56:00.859"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:56:01.863" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:56:00.861" endtime="20200115 15:56:01.863"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:00.860" endtime="20200115 15:56:01.864"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:00.799" endtime="20200115 15:56:01.864"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:00.799" endtime="20200115 15:56:01.864"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:00.798" endtime="20200115 15:56:01.865"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:00.783" endtime="20200115 15:56:01.865"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:56:02.867" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:56:01.866" endtime="20200115 15:56:02.867"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:01.866" endtime="20200115 15:56:02.868"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:00.782" endtime="20200115 15:56:02.868"></status>
</kw>
<kw name="And Go To Select Language &quot;english&quot;" library="SelectLanguageDefinitions">
<kw name="Select Language &quot;${language}&quot;" library="SelectLanguagePage">
<kw name="Go To Settings Screen" library="HomePage">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnSettings}</arg>
</arguments>
<msg timestamp="20200115 15:56:02.873" level="INFO">Clicking element '//div[@id='settings']/div/input[@type='submit']'.</msg>
<status status="PASS" starttime="20200115 15:56:02.872" endtime="20200115 15:56:02.983"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:56:03.988" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:56:02.986" endtime="20200115 15:56:03.988"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:02.985" endtime="20200115 15:56:03.989"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:02.871" endtime="20200115 15:56:03.989"></status>
</kw>
<kw name="Go To Select Language Screen" library="SettingsPage">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnLanguage Settings}</arg>
</arguments>
<msg timestamp="20200115 15:56:03.992" level="INFO">Clicking element '//div[@id='settings-language']'.</msg>
<status status="PASS" starttime="20200115 15:56:03.991" endtime="20200115 15:56:04.118"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:56:05.124" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:56:04.122" endtime="20200115 15:56:05.124"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:04.120" endtime="20200115 15:56:05.125"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:03.990" endtime="20200115 15:56:05.126"></status>
</kw>
<kw name="Convert To Lowercase" library="String">
<doc>Converts string to lowercase.</doc>
<arguments>
<arg>${language}</arg>
</arguments>
<assign>
<var>${temp language}</var>
</assign>
<msg timestamp="20200115 15:56:05.127" level="INFO">${temp language} = english</msg>
<status status="PASS" starttime="20200115 15:56:05.126" endtime="20200115 15:56:05.127"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${temp language}' == 'danish'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnDanish}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'german'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnGerman}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'english'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnEnglish}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'spainish'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnSpainish}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'french'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnFrench}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'italian'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnItalian}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'polish'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnPolish}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'portuguese'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnPortuguese}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'russian'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnRussian}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'chinese'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnChinese}</arg>
<arg>ELSE IF</arg>
<arg>'${temp language}' == 'korean'</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Click Element</arg>
<arg>${btnKorean}</arg>
<arg>ELSE</arg>
<arg>Run Keyword And Continue On Failure</arg>
<arg>Log</arg>
<arg>${temp language}</arg>
</arguments>
<kw name="Run Keyword And Continue On Failure" library="BuiltIn">
<doc>Runs the keyword and continues execution even if a failure occurs.</doc>
<arguments>
<arg>Click Element</arg>
<arg>${btnEnglish}</arg>
</arguments>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnEnglish}</arg>
</arguments>
<msg timestamp="20200115 15:56:05.131" level="INFO">Clicking element '//div[@id='language-list']/div[@id='1000']'.</msg>
<status status="PASS" starttime="20200115 15:56:05.130" endtime="20200115 15:56:05.200"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:05.130" endtime="20200115 15:56:05.201"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:05.128" endtime="20200115 15:56:05.202"></status>
</kw>
<kw name="Touch Save Language" library="SelectLanguagePage">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${btnSave}</arg>
</arguments>
<msg timestamp="20200115 15:56:05.205" level="INFO">Clicking element '//div[@id='save-button']'.</msg>
<status status="PASS" starttime="20200115 15:56:05.204" endtime="20200115 15:56:05.267"></status>
</kw>
<kw name="Wait For Page Load" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE LOAD TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:56:06.271" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20200115 15:56:05.269" endtime="20200115 15:56:06.271"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:05.268" endtime="20200115 15:56:06.272"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:05.203" endtime="20200115 15:56:06.272"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:02.870" endtime="20200115 15:56:06.273"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:02.869" endtime="20200115 15:56:06.273"></status>
</kw>
<kw name="Set Web UI to Stand By State and Close Current Browser" library="GeneralPage" type="teardown">
<kw name="Wait For Page Update" library="GeneralPage">
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>${PAGE UPDATE TIMEOUT}</arg>
</arguments>
<msg timestamp="20200115 15:56:06.377" level="INFO">Slept 100 milliseconds</msg>
<status status="PASS" starttime="20200115 15:56:06.277" endtime="20200115 15:56:06.377"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:06.276" endtime="20200115 15:56:06.378"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${btnExit}</arg>
</arguments>
<assign>
<var>${count Exit button}</var>
</assign>
<msg timestamp="20200115 15:56:06.392" level="INFO">${count Exit button} = 0</msg>
<status status="PASS" starttime="20200115 15:56:06.378" endtime="20200115 15:56:06.393"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count Exit button} &gt; 0</arg>
<arg>Exit Screen</arg>
</arguments>
<status status="PASS" starttime="20200115 15:56:06.393" endtime="20200115 15:56:06.394"></status>
</kw>
<kw name="Get Element Count" library="SeleniumLibrary">
<doc>Returns the number of elements matching ``locator``.</doc>
<arguments>
<arg>${lblimVisionX}</arg>
</arguments>
<assign>
<var>${count Home screen}</var>
</assign>
<msg timestamp="20200115 15:56:06.410" level="INFO">${count Home screen} = 0</msg>
<status status="PASS" starttime="20200115 15:56:06.394" endtime="20200115 15:56:06.410"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${count Home screen} &gt; 0</arg>
<arg>Run Keywords</arg>
<arg>Click Web Button</arg>
<arg>${btnHome}</arg>
<arg>AND</arg>
<arg>Wait For Page Load</arg>
</arguments>
<status status="PASS" starttime="20200115 15:56:06.411" endtime="20200115 15:56:06.412"></status>
</kw>
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200115 15:56:06.412" endtime="20200115 15:56:08.676"></status>
</kw>
<status status="PASS" starttime="20200115 15:56:06.274" endtime="20200115 15:56:08.676"></status>
</kw>
<status status="PASS" starttime="20200115 15:55:37.439" endtime="20200115 15:56:08.676" critical="yes"></status>
</test>
<status status="PASS" starttime="20200115 15:55:36.795" endtime="20200115 15:56:08.679"></status>
</suite>
<status status="PASS" starttime="20200115 15:55:36.795" endtime="20200115 15:56:08.681"></status>
</suite>
<status status="PASS" starttime="20200115 15:55:36.795" endtime="20200115 15:56:08.681"></status>
</suite>
<status status="PASS" starttime="20200115 15:55:36.780" endtime="20200115 15:56:08.681"></status>
</suite>
<status status="PASS" starttime="20200115 15:55:36.780" endtime="20200115 15:56:08.681"></status>
</suite>
<status status="PASS" starttime="20200115 15:55:36.748" endtime="20200115 15:56:08.681"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="BulkPatching Robot">BulkPatching Robot</stat>
<stat pass="1" fail="0" id="s1-s1" name="BulkPatching Robot">BulkPatching Robot.BulkPatching Robot</stat>
<stat pass="1" fail="0" id="s1-s1-s1" name="Test Resources">BulkPatching Robot.BulkPatching Robot.Test Resources</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1" name="Test Suites">BulkPatching Robot.BulkPatching Robot.Test Resources.Test Suites</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1-s1" name="5.Create Equipment">BulkPatching Robot.BulkPatching Robot.Test Resources.Test Suites.5.Create Equipment</stat>
<stat pass="1" fail="0" id="s1-s1-s1-s1-s1-s1" name="5.2.CheckEquipmentInTranslation">BulkPatching Robot.BulkPatching Robot.Test Resources.Test Suites.5.Create Equipment.5.2.CheckEquipmentInTranslation</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20200115 15:55:37.420" level="ERROR">Error in file 'C:\Users\quocanh.ho\git\BulkPatching_Robot\BulkPatching_Robot\Test_Resources\Test_Suites\5.Create_Equipment\5.2.CheckEquipmentInTranslation.robot': Resource file '..\Test_Pages\HomePage.robot' does not exist.</msg>
<msg timestamp="20200115 15:55:37.431" level="ERROR">Error in file 'C:\Users\quocanh.ho\git\BulkPatching_Robot\BulkPatching_Robot\Test_Resources\Test_Suites\5.Create_Equipment\5.2.CheckEquipmentInTranslation.robot': Resource file '..\Test_Pages\SettingsPage.robot' does not exist.</msg>
<msg timestamp="20200115 15:55:37.432" level="ERROR">Error in file 'C:\Users\quocanh.ho\git\BulkPatching_Robot\BulkPatching_Robot\Test_Resources\Test_Suites\5.Create_Equipment\5.2.CheckEquipmentInTranslation.robot': Resource file '..\Test_Pages\SelectLanguagePage.robot' does not exist.</msg>
<msg timestamp="20200115 15:55:37.432" level="ERROR">Error in file 'C:\Users\quocanh.ho\git\BulkPatching_Robot\BulkPatching_Robot\Test_Resources\Test_Suites\5.Create_Equipment\5.2.CheckEquipmentInTranslation.robot': Resource file '..\Test_Pages\GeneralPage.robot' does not exist.</msg>
</errors>
</robot>
